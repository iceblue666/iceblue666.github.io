(function(n){function e(e){for(var r,a,o=e[0],c=e[1],l=e[2],d=0,u=[];d<o.length;d++)a=o[d],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&u.push(i[a][0]),i[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(n[r]=c[r]);m&&m(e);while(u.length)u.shift()();return s.push.apply(s,l||[]),t()}function t(){for(var n,e=0;e<s.length;e++){for(var t=s[e],r=!0,a=1;a<t.length;a++){var o=t[a];0!==i[o]&&(r=!1)}r&&(s.splice(e--,1),n=c(c.s=t[0]))}return n}var r={},a={app:0},i={app:0},s=[];function o(n){return c.p+"js/"+({}[n]||n)+"."+{"chunk-2d0b30b7":"55f8eede","chunk-2d0cbe58":"8779867f","chunk-2d229474":"cf79032f","chunk-2f35bcab":"4d7ef8df","chunk-54975d1a":"b1efd0b8","chunk-6a4e2dfa":"60c62b96","chunk-e085d792":"691fab91"}[n]+".js"}function c(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.e=function(n){var e=[],t={"chunk-2f35bcab":1,"chunk-54975d1a":1,"chunk-6a4e2dfa":1,"chunk-e085d792":1};a[n]?e.push(a[n]):0!==a[n]&&t[n]&&e.push(a[n]=new Promise((function(e,t){for(var r="css/"+({}[n]||n)+"."+{"chunk-2d0b30b7":"31d6cfe0","chunk-2d0cbe58":"31d6cfe0","chunk-2d229474":"31d6cfe0","chunk-2f35bcab":"846c030c","chunk-54975d1a":"caa8f2c0","chunk-6a4e2dfa":"f7d10bf6","chunk-e085d792":"3e912931"}[n]+".css",i=c.p+r,s=document.getElementsByTagName("link"),o=0;o<s.length;o++){var l=s[o],d=l.getAttribute("data-href")||l.getAttribute("href");if("stylesheet"===l.rel&&(d===r||d===i))return e()}var u=document.getElementsByTagName("style");for(o=0;o<u.length;o++){l=u[o],d=l.getAttribute("data-href");if(d===r||d===i)return e()}var m=document.createElement("link");m.rel="stylesheet",m.type="text/css",m.onload=e,m.onerror=function(e){var r=e&&e.target&&e.target.src||i,s=new Error("Loading CSS chunk "+n+" failed.\n("+r+")");s.code="CSS_CHUNK_LOAD_FAILED",s.request=r,delete a[n],m.parentNode.removeChild(m),t(s)},m.href=i;var p=document.getElementsByTagName("head")[0];p.appendChild(m)})).then((function(){a[n]=0})));var r=i[n];if(0!==r)if(r)e.push(r[2]);else{var s=new Promise((function(e,t){r=i[n]=[e,t]}));e.push(r[2]=s);var l,d=document.createElement("script");d.charset="utf-8",d.timeout=120,c.nc&&d.setAttribute("nonce",c.nc),d.src=o(n);var u=new Error;l=function(e){d.onerror=d.onload=null,clearTimeout(m);var t=i[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;u.message="Loading chunk "+n+" failed.\n("+r+": "+a+")",u.name="ChunkLoadError",u.type=r,u.request=a,t[1](u)}i[n]=void 0}};var m=setTimeout((function(){l({type:"timeout",target:d})}),12e4);d.onerror=d.onload=l,document.head.appendChild(d)}return Promise.all(e)},c.m=n,c.c=r,c.d=function(n,e,t){c.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},c.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,e){if(1&e&&(n=c(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)c.d(t,r,function(e){return n[e]}.bind(null,r));return t},c.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return c.d(e,"a",e),e},c.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},c.p="",c.oe=function(n){throw console.error(n),n};var l=window["webpackJsonp"]=window["webpackJsonp"]||[],d=l.push.bind(l);l.push=e,l=l.slice();for(var u=0;u<l.length;u++)e(l[u]);var m=d;s.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("56d7")},"0020":function(n,e,t){"use strict";t("da2b")},"152f":function(n,e,t){},"15a1":function(n,e,t){},"245a":function(n,e,t){var r=t("278c").default;t("159b"),t("d3b7"),t("ddb0"),t("99af"),t("4fad"),t("1276"),t("ac1f"),t("4d63"),t("25f0");var a=t("96eb");a.setup({timeout:"200-600"});var i=[],s=t("36ed");s.keys().forEach((function(n){"./index.js"!==n&&"./common.js"!==n&&(i=i.concat(s(n).default))})),i.forEach((function(n){for(var e=0,t=Object.entries(n);e<t.length;e++){var i=r(t[e],2),s=i[0],o=i[1],c=s.split("|");a.mock(new RegExp("^"+c[1]+"$"),c[0],o)}}))},"26f6":function(n,e,t){"use strict";t.r(e);var r=t("e37f");e["default"]={"get|/article":function(n){return{status:200,message:"success",data:r["tmepListDatas"]}}}},2914:function(n,e,t){"use strict";t.r(e);t("4de4");var r=t("e37f");e["default"]={"post|/TitleById":function(n){var e=r["tmepListDatas"].filter((function(e){return e.id==JSON.parse(n.body).id}));return{status:200,message:"success",data:e[0].title}}}},3271:function(n,e,t){},"33cb":function(n,e,t){},"36ed":function(n,e,t){var r={"./article.js":"26f6","./articleDetail.js":"894d5","./common.js":"e37f","./getAllTags.js":"bee3","./getArticleLength.js":"4c82","./getFileSystem.js":"e969","./getRecentArticle.js":"895c","./getTitleById.js":"2914","./index.js":"245a","./test.js":"bf55"};function a(n){var e=i(n);return t(e)}function i(n){if(!t.o(r,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return r[n]}a.keys=function(){return Object.keys(r)},a.resolve=i,n.exports=a,a.id="36ed"},"3fe6":function(n,e,t){},4678:function(n,e,t){var r={"./af":"2bfb","./af.js":"2bfb","./ar":"8e73","./ar-dz":"a356","./ar-dz.js":"a356","./ar-kw":"423e","./ar-kw.js":"423e","./ar-ly":"1cfd","./ar-ly.js":"1cfd","./ar-ma":"0a84","./ar-ma.js":"0a84","./ar-sa":"8230","./ar-sa.js":"8230","./ar-tn":"6d83","./ar-tn.js":"6d83","./ar.js":"8e73","./az":"485c","./az.js":"485c","./be":"1fc10","./be.js":"1fc10","./bg":"84aa","./bg.js":"84aa","./bm":"a7fa","./bm.js":"a7fa","./bn":"9043","./bn-bd":"9686","./bn-bd.js":"9686","./bn.js":"9043","./bo":"d26a","./bo.js":"d26a","./br":"6887","./br.js":"6887","./bs":"2554","./bs.js":"2554","./ca":"d716","./ca.js":"d716","./cs":"3c0d","./cs.js":"3c0d","./cv":"03ec","./cv.js":"03ec","./cy":"9797","./cy.js":"9797","./da":"0f14","./da.js":"0f14","./de":"b469","./de-at":"b3eb","./de-at.js":"b3eb","./de-ch":"bb71","./de-ch.js":"bb71","./de.js":"b469","./dv":"598a","./dv.js":"598a","./el":"8d47","./el.js":"8d47","./en-au":"0e6b","./en-au.js":"0e6b","./en-ca":"3886","./en-ca.js":"3886","./en-gb":"39a6","./en-gb.js":"39a6","./en-ie":"e1d3","./en-ie.js":"e1d3","./en-il":"7333","./en-il.js":"7333","./en-in":"ec2e","./en-in.js":"ec2e","./en-nz":"6f50","./en-nz.js":"6f50","./en-sg":"b7e9","./en-sg.js":"b7e9","./eo":"65db","./eo.js":"65db","./es":"898b","./es-do":"0a3c","./es-do.js":"0a3c","./es-mx":"b5b7","./es-mx.js":"b5b7","./es-us":"55c9","./es-us.js":"55c9","./es.js":"898b","./et":"ec18","./et.js":"ec18","./eu":"0ff2","./eu.js":"0ff2","./fa":"8df4","./fa.js":"8df4","./fi":"81e9","./fi.js":"81e9","./fil":"d69a","./fil.js":"d69a","./fo":"0721","./fo.js":"0721","./fr":"9f26","./fr-ca":"d9f8","./fr-ca.js":"d9f8","./fr-ch":"0e49","./fr-ch.js":"0e49","./fr.js":"9f26","./fy":"7118","./fy.js":"7118","./ga":"5120","./ga.js":"5120","./gd":"f6b4","./gd.js":"f6b4","./gl":"8840","./gl.js":"8840","./gom-deva":"aaf2","./gom-deva.js":"aaf2","./gom-latn":"0caa","./gom-latn.js":"0caa","./gu":"e0c5","./gu.js":"e0c5","./he":"c7aa","./he.js":"c7aa","./hi":"dc4d","./hi.js":"dc4d","./hr":"4ba9","./hr.js":"4ba9","./hu":"5b14","./hu.js":"5b14","./hy-am":"d6b6","./hy-am.js":"d6b6","./id":"5038","./id.js":"5038","./is":"0558","./is.js":"0558","./it":"6e98","./it-ch":"6f12","./it-ch.js":"6f12","./it.js":"6e98","./ja":"079e","./ja.js":"079e","./jv":"b540","./jv.js":"b540","./ka":"201b","./ka.js":"201b","./kk":"6d79","./kk.js":"6d79","./km":"e81d","./km.js":"e81d","./kn":"3e92","./kn.js":"3e92","./ko":"22f8","./ko.js":"22f8","./ku":"2421","./ku.js":"2421","./ky":"9609","./ky.js":"9609","./lb":"440c","./lb.js":"440c","./lo":"b29d","./lo.js":"b29d","./lt":"26f9","./lt.js":"26f9","./lv":"b97c","./lv.js":"b97c","./me":"293c","./me.js":"293c","./mi":"688b","./mi.js":"688b","./mk":"6909","./mk.js":"6909","./ml":"02fb","./ml.js":"02fb","./mn":"958b","./mn.js":"958b","./mr":"39bd","./mr.js":"39bd","./ms":"ebe4","./ms-my":"6403","./ms-my.js":"6403","./ms.js":"ebe4","./mt":"1b45","./mt.js":"1b45","./my":"8689","./my.js":"8689","./nb":"6ce3","./nb.js":"6ce3","./ne":"3a39","./ne.js":"3a39","./nl":"facd","./nl-be":"db29","./nl-be.js":"db29","./nl.js":"facd","./nn":"b84c","./nn.js":"b84c","./oc-lnc":"167b","./oc-lnc.js":"167b","./pa-in":"f3ff","./pa-in.js":"f3ff","./pl":"8d57","./pl.js":"8d57","./pt":"f260","./pt-br":"d2d4","./pt-br.js":"d2d4","./pt.js":"f260","./ro":"972c","./ro.js":"972c","./ru":"957c","./ru.js":"957c","./sd":"6784","./sd.js":"6784","./se":"ffff","./se.js":"ffff","./si":"eda5","./si.js":"eda5","./sk":"7be6","./sk.js":"7be6","./sl":"8155","./sl.js":"8155","./sq":"c8f3","./sq.js":"c8f3","./sr":"cf1e","./sr-cyrl":"13e9","./sr-cyrl.js":"13e9","./sr.js":"cf1e","./ss":"52bd","./ss.js":"52bd","./sv":"5fbd","./sv.js":"5fbd","./sw":"74dc","./sw.js":"74dc","./ta":"3de5","./ta.js":"3de5","./te":"5cbb","./te.js":"5cbb","./tet":"576c","./tet.js":"576c","./tg":"3b1b","./tg.js":"3b1b","./th":"10e8","./th.js":"10e8","./tk":"5aff","./tk.js":"5aff","./tl-ph":"0f38","./tl-ph.js":"0f38","./tlh":"cf75","./tlh.js":"cf75","./tr":"0e81","./tr.js":"0e81","./tzl":"cf51","./tzl.js":"cf51","./tzm":"c109","./tzm-latn":"b53d","./tzm-latn.js":"b53d","./tzm.js":"c109","./ug-cn":"6117","./ug-cn.js":"6117","./uk":"ada2","./uk.js":"ada2","./ur":"5294","./ur.js":"5294","./uz":"2e8c","./uz-latn":"010e","./uz-latn.js":"010e","./uz.js":"2e8c","./vi":"2921","./vi.js":"2921","./x-pseudo":"fd7e","./x-pseudo.js":"fd7e","./yo":"7f33","./yo.js":"7f33","./zh-cn":"5c3a","./zh-cn.js":"5c3a","./zh-hk":"49ab","./zh-hk.js":"49ab","./zh-mo":"3a6c","./zh-mo.js":"3a6c","./zh-tw":"90ea","./zh-tw.js":"90ea"};function a(n){var e=i(n);return t(e)}function i(n){if(!t.o(r,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return r[n]}a.keys=function(){return Object.keys(r)},a.resolve=i,n.exports=a,a.id="4678"},"4c82":function(n,e,t){"use strict";t.r(e);var r=t("e37f");e["default"]={"get|/getArticleLength":function(n){return{status:200,message:"success",data:r["tmepListDatas"].length}}}},"4c97":function(n,e,t){"use strict";t("15a1")},"4fc4":function(n,e,t){},"553e":function(n,e,t){"use strict";t("f0a0")},"56d7":function(n,e,t){"use strict";t.r(e);t("920a"),t("450d");var r=t("4f0c"),a=t.n(r),i=(t("2f02"),t("fe11")),s=t.n(i),o=(t("ed7b"),t("e1a5")),c=t.n(o),l=(t("34db"),t("3803")),d=t.n(l),u=(t("8bd8"),t("4cb2")),m=t.n(u),p=(t("4ca3"),t("443e")),g=t.n(p),h=(t("b84d"),t("c216")),f=t.n(h),b=(t("8f24"),t("76b9")),y=t.n(b),v=(t("279e"),t("7d94")),x=t.n(v),j=(t("e3ea"),t("7bc3")),w=t.n(j),k=(t("acb6"),t("c673")),S=t.n(k),O=(t("cbb5"),t("8bbc")),_=t.n(O),B=(t("5e32"),t("6721")),A=t.n(B),D=(t("f4f9"),t("c2cc")),C=t.n(D),M=(t("7a0f"),t("0f6c")),F=t.n(M),E=(t("aaa5"),t("a578")),L=t.n(E),T=(t("e623"),t("e379"),t("5dc8"),t("37e1"),t("159b"),t("b0c0"),t("ba4c")),N=t.n(T),$=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"app"}},[t("nav-bar"),t("body-main"),t("bottom-to-up")],1)},P=[],W=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"nav"},["mobile"===n.$store.state.app.device?t("div",[t("nav-right",{directives:[{name:"show",rawName:"v-show",value:n.opened,expression:"opened"}],staticClass:"absolute mobile-nav",class:{"nav-open":n.opened},attrs:{mode:"vertical"}}),t("div",{directives:[{name:"show",rawName:"v-show",value:n.$store.state.app.sidebar.opened,expression:"$store.state.app.sidebar.opened"}],staticClass:"mask",on:{click:function(e){return n.closeSideBar()}}})],1):n._e(),"desktop"===n.$store.state.app.device?t("el-row",{attrs:{gutter:0}},[t("el-col",{staticClass:"logo",attrs:{push:1,span:6}},[t("logo")],1),t("el-col",{attrs:{push:1,span:12}},[t("nav-right")],1),t("el-col",{staticClass:"logo",attrs:{span:6}},[t("search")],1)],1):t("el-row",{attrs:{gutter:0,justify:"center",align:"center"}},[t("el-col",{attrs:{span:6}},[t("div",{staticClass:"menu-container",on:{click:function(e){return n.toggleSideBar()}}},[t("i",{staticClass:"el-icon-menu"})])]),t("el-col",{staticClass:"logo",attrs:{span:12}},[t("logo")],1),t("el-col",{staticClass:"logo",attrs:{span:6}},[t("search")],1)],1)],1)},q=[],V=t("5530"),H=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"logo-container",on:{click:n.pushToOrigin}},[t("img",{staticClass:"img",staticStyle:{"border-radius":"50%"},attrs:{src:n.imgSrc}}),t("p",[n._v(n._s(n.blogName))])])},G=[],Y={data:function(){return{imgSrc:this.$config.logo,blogName:this.$config.blogName}},mounted:function(){},methods:{pushToOrigin:function(){this.$router.push({path:"/"})}}},z=Y,I=(t("64bd"),t("2877")),R=Object(I["a"])(z,H,G,!1,null,"597ca3b1",null),J=R.exports,X=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("el-menu",{staticClass:"el-menu-demo nav-el-menu",attrs:{"default-active":n.activeIndex,mode:n.mode,router:!0}},n._l(n.items,(function(e,r){return t("el-menu-item",{key:e.id,attrs:{index:e.id,route:e.route}},[t("i",{class:e.iconClass}),n._v(n._s(e.text))])})),1)},U=[],Q=(t("7db0"),{props:{mode:{type:String,default:"horizontal"}},data:function(){return{activeIndex:"1",routepath:"/",items:[{id:"1",route:{path:"/"},iconClass:"el-icon-edit",text:"首页"},{id:"2",route:{path:"/archives"},iconClass:"el-icon-edit",text:"归档"},{id:"3",route:{path:"/friends"},iconClass:"el-icon-edit",text:"友链"},{id:"4",route:{path:"/aboutme"},iconClass:"el-icon-edit",text:"关于我"}]}},watch:{$route:function(n,e){this.changeActiveIndex()}},methods:{changeActiveIndex:function(){var n=this;if(this.$route.path){this.routepath=this.$route.path;var e=this.items.find((function(e){return!!e.route&&e.route.path===n.routepath}));this.activeIndex=e?e.id:"1"}}},beforeMount:function(){this.changeActiveIndex()},mounted:function(){}}),K=Q,Z=(t("abdf"),Object(I["a"])(K,X,U,!1,null,"3ac9a0fd",null)),nn=Z.exports,en=function(){var n=this,e=n.$createElement;n._self._c;return n._m(0)},tn=[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"search-container"},[t("i",{staticClass:"el-icon-search"})])}],rn={},an=rn,sn=(t("8e8b"),Object(I["a"])(an,en,tn,!1,null,"1d25ba25",null)),on=sn.exports,cn=t("2f62"),ln={namespaced:!0,state:{sidebar:{opened:!0},device:"desktop"},getters:{sideBarOpened:function(n){return n.sidebar.opened}},mutations:{TOGGLE_SIDEBAR:function(n){n.sidebar.opened=!n.sidebar.opened},CLOSE_SIDEBAR:function(n){n.sidebar.opened=!1},TOGGLE_DEVICE:function(n,e){n.device=e}},actions:{toggleSideBar:function(n){var e=n.commit;e("TOGGLE_SIDEBAR")},closeSideBar:function(n){var e=n.commit;e("CLOSE_SIDEBAR")},toggleDevice:function(n,e){var t=n.commit;t("TOGGLE_DEVICE",e)}}};N.a.use(cn["a"]);var dn=new cn["a"].Store({modules:{app:ln}}),un=document,mn=un.body,pn=992,gn={watch:{$route:function(n){"mobile"===this.device&&this.sidebar.opened&&dn.dispatch("app/closeSideBar")}},beforeMount:function(){window.addEventListener("resize",this.$_resizeHandler)},beforeDestroy:function(){window.removeEventListener("resize",this.$_resizeHandler)},mounted:function(){var n=this.$_isMobile();n&&(dn.dispatch("app/toggleDevice","mobile"),dn.dispatch("app/closeSideBar"))},methods:{$_isMobile:function(){var n=mn.getBoundingClientRect();return n.width-1<pn},$_resizeHandler:function(){if(!document.hidden){var n=this.$_isMobile();dn.dispatch("app/toggleDevice",n?"mobile":"desktop"),n&&dn.dispatch("app/closeSideBar")}}}},hn={data:function(){return{imgSrc:this.$config.logo,blogName:this.$config.blogName}},computed:Object(V["a"])({},Object(cn["c"])({opened:"app/sideBarOpened"})),methods:Object(V["a"])({handleSelect:function(){},closeSideBar:function(){this.$store.dispatch("app/closeSideBar")}},Object(cn["b"])({toggleSideBar:"app/toggleSideBar"})),mounted:function(){},mixins:[gn],components:{logo:J,navRight:nn,search:on}},fn=hn,bn=(t("0020"),Object(I["a"])(fn,W,q,!1,null,"c372ab96",null)),yn=bn.exports,vn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[n._v(" side-bar ")])},xn=[],jn={},wn=jn,kn=Object(I["a"])(wn,vn,xn,!1,null,"358a6c30",null),Sn=kn.exports,On=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"body-container"},[t("el-row",[t("el-col",{staticClass:"hidden-xs-only left container-radius",attrs:{md:4}},[t("body-left")],1),t("el-col",{staticClass:"middle",attrs:{md:12,xs:24}},[t("bodyMiddle")],1),t("el-col",{staticClass:"hidden-xs-only right",attrs:{md:4}},[t("bodyRight")],1)],1)],1)},_n=[],Bn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"container-radius"},[t("card"),t("archive-list")],1)},An=[],Dn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"card-container container-radius"},[t("el-image",{staticClass:"img img-radius",attrs:{src:n.url}}),t("el-avatar",{staticClass:"avater",attrs:{size:60,src:n.circleUrl}}),t("p",{staticClass:"title"},[n._v(n._s(n.$config.title))]),t("el-row",{staticClass:"card-item-container",attrs:{type:"flex"}},n._l(n.items,(function(n,e){return t("card-item",{key:e,attrs:{number:n.num,text:n.text}})})),1)],1)},Cn=[],Mn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("el-col",[t("div",[n._v(n._s(n.number))]),t("div",{domProps:{innerHTML:n._s(n.text)}})])},Fn=[],En=(t("a9e3"),{data:function(){return{}},props:{number:{type:Number,required:!0},text:{type:String,required:!0}}}),Ln=En,Tn=Object(I["a"])(Ln,Mn,Fn,!1,null,"dc643e62",null),Nn=Tn.exports,$n={data:function(){return{url:this.$config.defaultPic,circleUrl:this.$config.logo,items:[{num:0,text:"文章"},{num:0,text:"运行天数"},{num:0,text:"评论"}]}},mounted:function(){var n=this;this.$axios.get("/getArticleLength").then((function(e){n.items[0].num=e.data.data,n.items[1].num=n.$moment().diff(n.$moment(n.$config.BlogStartTime),"days")}))},computed:{},components:{cardItem:Nn}},Pn=$n,Wn=(t("4c97"),Object(I["a"])(Pn,Dn,Cn,!1,null,"7232eb0f",null)),qn=Wn.exports,Vn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("container-template",{attrs:{title:"文件夹",icon:"el-icon-folder"}},[t("list",{attrs:{listData:n.listData}})],1)},Hn=[],Gn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("el-tree",{attrs:{data:n.listData,props:n.defaultProps},on:{"node-click":n.handleNodeClick}})},Yn=[],zn={props:{listData:{type:Array,default:[]}},data:function(){return{defaultProps:{children:"children",label:"label"}}},methods:{handleNodeClick:function(n){n.isFolder||this.$router.push({name:"Article",params:{id:n.info.id}})}}},In=zn,Rn=Object(I["a"])(In,Gn,Yn,!1,null,"226c5e3e",null),Jn=Rn.exports,Xn={components:{list:Jn},data:function(){return{listData:[]}},mounted:function(){var n=this;this.$axios.get("/getFileSystem").then((function(e){n.listData=[e.data.data]}))}},Un=Xn,Qn=(t("c134"),Object(I["a"])(Un,Vn,Hn,!1,null,"191aac88",null)),Kn=Qn.exports,Zn={components:{card:qn,archiveList:Kn}},ne=Zn,ee=Object(I["a"])(ne,Bn,An,!1,null,"58d5e35d",null),te=ee.exports,re=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"container"},[t("tag-cloud"),t("recent-articles")],1)},ae=[],ie=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("container-template",{staticClass:"container",attrs:{title:"标签云",icon:"el-icon-cloudy"}},n._l(n.list,(function(e,r){return t("el-tag",{key:r,staticClass:"tag",attrs:{type:"success"}},[n._v(" "+n._s(e)+" ")])})),1)},se=[],oe={data:function(){return{list:[]}},mounted:function(){var n=this;this.$axios.get("/getAllTags").then((function(e){n.list=e.data.data}))}},ce=oe,le=(t("6c6e"),Object(I["a"])(ce,ie,se,!1,null,"ad7a31aa",null)),de=le.exports,ue=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("container-template",{staticClass:"container",attrs:{title:"最近文章",icon:"el-icon-document"}},n._l(n.list,(function(n,e){return t("article-list-item",{attrs:{isFirst:0===e,info:n}})})),1)},me=[],pe=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"item-container"},[n.isFirst?n._e():t("el-divider",{staticClass:"divider"}),t("div",{staticClass:"container-title"},[t("div",{staticClass:"title-text",on:{click:function(e){return n.pushRoute()}}},[n._v(n._s(n.info.title))]),t("el-row",{staticClass:"detail"},[t("el-col",{staticClass:"col",attrs:{span:8}},[t("i",{staticClass:"el-icon-time"}),t("span",[n._v(n._s(n.time))])]),t("el-col",{staticClass:"col",attrs:{span:5}},[t("i",{staticClass:"el-icon-view"}),t("span",[n._v(n._s(n.info.watch))])]),t("el-col",{staticClass:"col",attrs:{span:5}},[t("i",{staticClass:"el-icon-tickets"}),t("span",[n._v(n._s(n.info.comment))])])],1)],1)],1)},ge=[],he={data:function(){return{time:null}},props:{isFirst:{type:Boolean,default:!1},info:{type:Object}},mounted:function(){this.time=this.$moment(this.info.time).fromNow()},methods:{pushRoute:function(){this.$router.push({name:"Article",params:{id:this.info.id}})}}},fe=he,be=(t("a6c5"),Object(I["a"])(fe,pe,ge,!1,null,"51072d4d",null)),ye=be.exports,ve={components:{articleListItem:ye},data:function(){return{list:null}},mounted:function(){var n=this;this.$axios.get("/getRecentArticle").then((function(e){n.list=e.data.data}))}},xe=ve,je=Object(I["a"])(xe,ue,me,!1,null,"4d26001a",null),we=je.exports,ke={components:{tagCloud:de,recentArticles:we}},Se=ke,Oe=(t("962d"),Object(I["a"])(Se,re,ae,!1,null,"66465f32",null)),_e=Oe.exports,Be=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"middle-container container-radius"},[t("breadcrumb"),t("router-view")],1)},Ae=[],De=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"container"},[t("el-breadcrumb",{staticClass:"container-bread",attrs:{separator:">"}},n._l(n.list,(function(e){return t("el-breadcrumb-item",{attrs:{to:{name:e.meta.name}}},[n._v(n._s(e.meta.breadNav))])})),1)],1)},Ce=[],Me=(t("4de4"),t("99af"),{data:function(){return{list:null}},watch:{$route:function(n,e){this.getList()}},created:function(){this.getList()},mounted:function(){},methods:{getList:function(){var n=this,e=this.$route.matched.filter((function(n){return n.meta})),t=[{meta:{breadNav:"首页",name:"Main"}}];e.length>0&&"Main"===e[0].meta.name&&e.shift(),this.list=t.concat(e),"Article"===this.$route.name&&this.$axios.post("/TitleById",{id:this.$route.params.id}).then((function(e){console.log("res",e),n.list.push({meta:{breadNav:e.data.data,name:null}})})).catch((function(n){console.log(n)}))}}}),Fe=Me,Ee=(t("a054"),Object(I["a"])(Fe,De,Ce,!1,null,"4a1eee98",null)),Le=Ee.exports,Te={components:{breadcrumb:Le}},Ne=Te,$e=(t("c4c5"),Object(I["a"])(Ne,Be,Ae,!1,null,"a35ae15c",null)),Pe=$e.exports,We={components:{bodyLeft:te,bodyRight:_e,bodyMiddle:Pe}},qe=We,Ve=(t("553e"),Object(I["a"])(qe,On,_n,!1,null,"27f2c7c5",null)),He=Ve.exports,Ge={components:{navBar:yn,sideBar:Sn,bodyMain:He},data:function(){return{}}},Ye=Ge,ze=(t("5c0b"),Object(I["a"])(Ye,$,P,!1,null,null,null)),Ie=ze.exports,Re=(t("d3b7"),t("3ca3"),t("ddb0"),t("8c4f"));N.a.use(Re["a"]);var Je=Re["a"].prototype.push;Re["a"].prototype.push=function(n){return Je.call(this,n).catch((function(n){return n}))};var Xe=[{path:"/",meta:{breadNav:"首页",name:"Main"},name:"Main",component:function(){return t.e("chunk-2f35bcab").then(t.bind(null,"7f94"))}},{path:"/archives",meta:{breadNav:"归档",name:"Archives"},name:"Archives",component:function(){return t.e("chunk-54975d1a").then(t.bind(null,"aaea"))}},{path:"/article/:id",meta:{breadNav:"文章",name:"Article"},name:"Article",component:function(){return t.e("chunk-6a4e2dfa").then(t.bind(null,"72e1"))}},{path:"/friends",meta:{breadNav:"友链",name:"Friends"},name:"Friends",component:function(){return t.e("chunk-2d0cbe58").then(t.bind(null,"4c2e"))}},{path:"/aboutme",meta:{breadNav:"关于",name:"AboutMe"},name:"AboutMe",component:function(){return t.e("chunk-2d229474").then(t.bind(null,"dd86"))}},{path:"/test",meta:{breadNav:"测试",name:"Test"},name:"Test",component:function(){return t.e("chunk-2d0b30b7").then(t.bind(null,"2762"))}},{path:"*",component:function(){return t.e("chunk-e085d792").then(t.bind(null,"8cdb"))}}],Ue=new Re["a"]({mode:"history",routes:Xe}),Qe=Ue,Ke=(t("0fae"),t("e05f"),t("e4cb"),t("e619"),t("1487")),Ze=t.n(Ke),nt=t("86d5"),et=t.n(nt),tt={blogName:"修仙侠SY",logo:"http://qpyj44oyp.hn-bkt.clouddn.com/imglogo.jpg",defaultPic:"http://qpyj44oyp.hn-bkt.clouddn.com/imgdefault.jpg",title:"SY的Blog",src:"",BlogStartTime:"2021-03-08 12:00:00"};tt.src=et.a;var rt=tt,at=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"archive-container container-radius"},[t("div",{staticClass:"title"},[t("i",{class:n.icon}),t("span",{staticStyle:{"margin-left":"10px"}},[n._v(n._s(n.title))])]),n._t("default")],2)},it=[],st={name:"containerTemplate",props:{title:{type:String,default:""},icon:{type:String}}},ot=st,ct=(t("d622"),Object(I["a"])(ot,at,it,!1,null,"774a8896",null)),lt=ct.exports,dt=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("el-backtop",{attrs:{bottom:50}},[t("div",{staticStyle:{"{\n      height":"100%",width:"100%","background-color":"#f2f5f6","box-shadow":"0 0 6px rgba(0,0,0, .12)","text-align":"center","line-height":"40px",color:"#1989fa"}},[n._v(" UP ")])])},ut=[],mt={name:"bottomToUp"},pt=mt,gt=Object(I["a"])(pt,dt,ut,!1,null,"54bfbf7c",null),ht=gt.exports,ft=t("bc3a"),bt=t.n(ft),yt=t("c1df"),vt=t.n(yt);t("1276"),t("ac1f");vt.a.defineLocale("zh-cn",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"周日_周一_周二_周三_周四_周五_周六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"Ah点mm分",LTS:"Ah点m分s秒",L:"YYYY-MM-DD",LL:"YYYY年MMMD日",LLL:"YYYY年MMMD日Ah点mm分",LLLL:"YYYY年MMMD日ddddAh点mm分",l:"YYYY-MM-DD",ll:"YYYY年MMMD日",lll:"YYYY年MMMD日Ah点mm分",llll:"YYYY年MMMD日ddddAh点mm分"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(n,e){return 12===n&&(n=0),"凌晨"===e||"早上"===e||"上午"===e?n:"下午"===e||"晚上"===e?n+12:n>=11?n:n+12},meridiem:function(n,e,t){var r=100*n+e;return r<600?"凌晨":r<900?"早上":r<1130?"上午":r<1230?"中午":r<1800?"下午":"晚上"},calendar:{sameDay:function(){return 0===this.minutes()?"[今天]Ah[点整]":"[今天]LT"},nextDay:function(){return 0===this.minutes()?"[明天]Ah[点整]":"[明天]LT"},lastDay:function(){return 0===this.minutes()?"[昨天]Ah[点整]":"[昨天]LT"},nextWeek:function(){var n,e;return n=vt()().startOf("week"),e=this.unix()-n.unix()>=604800?"[下]":"[本]",0===this.minutes()?e+"dddAh点整":e+"dddAh点mm"},lastWeek:function(){var n,e;return n=vt()().startOf("week"),e=this.unix()<n.unix()?"[上]":"[本]",0===this.minutes()?e+"dddAh点整":e+"dddAh点mm"},sameElse:"LL"},ordinalParse:/\d{1,2}(日|月|周)/,ordinal:function(n,e){switch(e){case"d":case"D":case"DDD":return n+"日";case"M":return n+"月";case"w":case"W":return n+"周";default:return n}},relativeTime:{future:"%s内",past:"%s前",s:"几秒",m:"1 分钟",mm:"%d 分钟",h:"1 小时",hh:"%d 小时",d:"1 天",dd:"%d 天",M:"1 个月",MM:"%d 个月",y:"1 年",yy:"%d 年"},week:{dow:1,doy:4}}),vt.a.locale("zh-cn"),N.a.config.productionTip=!1,N.a.use(L.a),N.a.use(F.a),N.a.use(C.a),N.a.use(A.a),N.a.use(_.a),N.a.use(S.a),N.a.use(w.a),N.a.use(x.a),N.a.use(y.a),N.a.use(f.a),N.a.use(g.a),N.a.use(m.a),N.a.use(d.a),N.a.use(c.a),N.a.use(s.a),N.a.use(a.a),N.a.directive("highlight",(function(n){var e=n.querySelectorAll("pre code");e.forEach((function(n){Ze.a.highlightBlock(n)}))})),N.a.prototype.$config=rt,N.a.component(lt.name,lt),N.a.component(ht.name,ht),t("245a"),N.a.prototype.$axios=bt.a,N.a.prototype.$moment=vt.a,new N.a({router:Qe,store:dn,render:function(n){return n(Ie)}}).$mount("#app")},"5c0b":function(n,e,t){"use strict";t("9c0c")},"64bd":function(n,e,t){"use strict";t("4fc4")},"6acb":function(n,e,t){},"6c6e":function(n,e,t){"use strict";t("fd4f")},"767e":function(n,e,t){},"80e7":function(n){n.exports=JSON.parse('{"Article":[{"id":10,"comment":0,"watch":0,"virPath":"Windows服务器配置nginx.md","title":"Windows服务器配置nginx","path":"F:\\\\Blogs\\\\reso\\\\public\\\\Windows服务器配置nginx.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-22 19:28:12","categories":["服务器"],"tags":["windows","nginx"],"summary":"","content":"\\n# Windows服务器配置nginx\\n\\n由于整个项目都要自己做，所以被分配了一个服务器后，自己就要从0开始配置。首先就要配置web服务器。\\n\\n其实不管是windows，linux服务器配置nginx的博客都很多了，但问题是往往在本地输入一个localhost:80，能访问到nginx的欢迎页面就完了，但是如何让别的主机访问真就一点没有呗，感情nginx就是个玩具，在自己的主机上玩玩就得了。\\n\\n再进一步，如何让局域网（内网）主机能够访问？\\n\\n这里是windows服务器的配置过程。\\n\\n1. 下载nginx，解压。\\n\\n2. 放到目标位置，`start nginx`，访问localhost:80成功看到欢迎页面即算安装成功。\\n\\n   ![image-20210322193610208](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322193610208.png)\\n\\n3. 更改自己的服务`nginx-1.18.0/conf/nginx.conf` server的server_name为自己的ip\\n\\n   ![image-20210322194351329](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322194351329.png)\\n\\n   再本地运行ip:80如果还能看到nginx的欢迎页面，证明服务成功。\\n\\n4. **很关键**，那么如何让局域网的主机访问，其实不需要更改nginx的配置，而是要把windows服务器的防火墙设置一下。\\n\\n   比如，我想暴露服务的端口是80，那么点击控制面板，点击系统与安全，点击防火墙。\\n\\n   ![image-20210322194716750](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322194716750.png)\\n\\n   点击高级设置，左侧有个入站规则，点击后右侧有个新建规则\\n\\n   ![image-20210322194818068](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322194818068.png)\\n\\n   接下来，设置号端口号，一路下一步就可以了。\\n\\n   局域网内其他主机就可以访问服务器了！"},{"id":13,"comment":0,"watch":0,"virPath":"学习TypeScript.md","title":"学习TypeScript","path":"F:\\\\Blogs\\\\reso\\\\public\\\\学习TypeScript.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-21 19:31:02","categories":["前端"],"tags":["Typescript","前端","记录"],"summary":"","content":"\\n# 学习TypeScript\\n\\n学习知识容易忘，这里做个记录也算个总结。\\n\\n## 1. 使用ts\\n\\n使用ts很简单，安装node，`npm i -g typescript`就好了。\\n\\n使用`tsc ${ts文件名} `编译生成js\\n\\n## 2. 数据类型\\n\\nts重要的作用之一就是限制变量的类型，目前变量类型有下：\\n\\n| 类型           | 说明                                                     | 举例                                         |\\n| -------------- | -------------------------------------------------------- | -------------------------------------------- |\\n| number         | 数字                                                     | let a: number                                |\\n| string         | 字符串                                                   | let str: string                              |\\n| boolean        | 布尔值                                                   | let bool: boolean                            |\\n| 字面量         | 该变量仅能赋予规定字面量的值                             | let a: \\"Hello\\"或let a :\\"Hello\\" \\\\| World\\"     |\\n| any            | 自己可以赋值任意类型，应该是用不到，用了和原生js一样。   | let a: any                                   |\\n| unknown        | 自己也可以赋值任意类型，但是不能赋值给其他类型变量       | let a:unknown                                |\\n| void           | 空，常用函数返回值                                       | function fn():void {}                        |\\n| never          | 没有返回结果，比如有些函数执行到中途不会继续             | function fn():never {throw new Error(\'hah\')} |\\n| object         | 万物对象，并不是心里想的那个对象，函数也算对象，一般不用 |                                              |\\n| object[接上面] | 规定变量属性类型                                         | let a : {name:string}                        |\\n| array          | 数组                                                     | let arr: string[]                            |\\n| tuple          | 元组，也就是固定长度的数组                               | let t: [number, string]                      |\\n| enum           | 枚举                                                     |                                              |\\n\\n> any类型变量可以赋予任何其他类型的变量\\n\\n**类型断言**（unknown专属）：\\n\\n由于unknown变量可以转换为各种类型变量，而当一个unknown变量想赋值给其他变量时，常规会报错，因为unknown不能转化为其他类型。\\n\\n但是使用类型断言可以告诉编译器，这个unknown变量在这里是什么类型。\\n\\n使用方式两种：\\n\\n1) 变量 as 类型\\n\\n```\\nlet a: unknown;\\nlet str: string;\\na = str as string;\\n```\\n\\n2) <类型>变量\\n\\n```\\nlet a: unknown;\\nlet str: string;\\na = <string>str;\\n```\\n\\n**定义对象属性**、\\n\\n```\\nlet a : {name:string, age?:number} // 问号意为可选\\n// 但如果可能有很多属性，那么使用以下方式定义\\nlet a: {[propsName:string]:any} //代表任意字符串类的属性名的值可以为any类型\\n```\\n\\n**定义函数**\\n\\n```\\nlet fn: (a: number, b: number) => number;\\n// 意思为fn必须是个函数，且这个函数两个形参都是number，返回值是number\\n```\\n\\n**定义数组**\\n\\n```\\n// 第一种\\nlet arr: string[] // 意思是arr必须是个数组，\\t且数组内的元素都必须是string类型\\n// 第二种\\nlet arr: Array<string>\\n```\\n\\n**定义枚举类**\\n\\n```\\nenum Type {\\n\\tRect = 0,\\n\\tCircle = 1\\n}\\nlet a: {name:string, type:Type};\\na = {\\n\\tname: \'矩形\',\\n\\ttype: Type.Rect\\n}\\n```\\n\\n**运算符**\\n\\n| --- 或\\n\\n& --- 且\\n\\n```\\nlet a: string | number // a可以是字符串，也可以是数字\\nlet a: {name:string} & {type:string} // a既要满足有name属性为字符串，又要满足type类型为字符串。\\n```\\n\\n**自定义类型**\\n\\n```\\ntype myType = string // 有点c++ typedef的感觉\\nlet a: myType // 实际上就是a为myType类型，而myType实际上是string类型，所以a是string类型\\n// 适用于自定义比如\\ntype myType = {\\n\\tname:string,\\n\\tage:number,\\n\\tgender:string,\\n\\tclothes:string\\n}\\nlet a:myType\\n```\\n\\n## 3. TS编译JS\\n\\n**热更新**\\n\\n`tsc ${文件} -w`\\n\\n### **配置**\\n\\n- include\\n\\n  - 说明：编译的包含文件范围\\n\\n  - 默认值：`[\\"**/*\\"]`\\n\\n  - 示例：\\n\\n    ```\\n  { // 两个*代表任意目录，一个*代表任意文件\\n    \\t\\"include\\":[\\n    \\t\\t\\"./src/**/*\\" \\n    \\t]\\n    }\\n    ```\\n  \\n- exclude\\n\\n  - 说明：编译文件不包含文件\\n\\n  - 默认值：`[\\"node_modules\\", \\"bower_components\\", \\"jspm_packages\\"]`\\n\\n  - 示例：\\n\\n    ```\\n    { // 两个*代表任意目录，一个*代表任意文件\\n    \\t\\"exclude\\":[\\n    \\t\\t\\"./src/**/*\\" \\n    \\t]\\n    }\\n    ```\\n\\n- extends\\n\\n  - 说明：定义被继承的配置文件\\n\\n  - 示例：\\n\\n    ```\\n    \\"extends\\": \\"./configs/base\\"\\n    ```\\n\\n- files\\n\\n  - 说明：定义被编译文件的列表，**编译的文件少时用到**\\n\\n  - 示例：\\n\\n    ```\\n    \\"files\\": [\\n        \\"core.ts\\",\\n        \\"sys.ts\\"\\n    ]\\n    ```\\n\\n- compilerOptions\\n\\n  - 说明：包含了许多子选项完成编译\\n  - 文档：https://www.tslang.cn/docs/handbook/compiler-options.html\\n- compilerOptions选项\\n\\n  - target\\n    - 说明：设置ts编译目标版本\\n\\n    - 默认值：ES3\\n\\n    - 可选值：ES3、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext\\n\\n    - 示例：\\n\\n      ```\\n      \\"compilerOptions\\": {\\n          \\"target\\": \\"ES6\\"\\n      }\\n      ```\\n\\n  - module\\n\\n    - 说明：设置编译后使用的模块化系统版本\\n      \\n      - 可选值：CommonJS、UMD、AMD、System、ES2020、ESNext、None\\n      \\n      - 示例：\\n      \\n        ```\\n        \\"compilerOptions\\": {\\n        \\t\\"module\\": \\"CommonJS\\"\\n        }\\n        ```\\n      \\n    \\n  - lib\\n\\n    - 说明：运行代码包含的库（一般不建议修改）\\n    - 可选值：可以故意lib输入错误信息，编译查看\\n    - 示例：同上\\n\\n  - outDIr\\n\\n    - 说明：编译后文件输出目录，所有js代码目录结构和输入的源结构一致。\\n\\n    - 默认：所有编译js代码与ts同目录\\n\\n    - 示例：\\n\\n      ```\\n      \\"compilerOptions\\": {\\n          \\"outDir\\": \\"dist\\"\\n      }\\n      ```\\n\\n  - outFile\\n\\n    - 说明：所有文件代码输出到一个文件中（使用不多且对于模块等需要配置）\\n\\n    - 示例：\\n\\n      ```\\n      \\"compilerOptions\\": {\\n          \\"outFile\\": \\"./dist/main.js\\"\\n      }\\n      ```\\n\\n  - 其余可以看文档，文档地址在上面\\n\\n- \\n\\n"},{"id":12,"comment":0,"watch":0,"virPath":"可拖拽组件.md","title":"可拖拽组件","path":"F:\\\\Blogs\\\\reso\\\\public\\\\可拖拽组件.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-17 22:40:04","categories":["开发"],"tags":["draggable","项目开发"],"summary":"","content":"\\n# 可拖拽组件\\n\\n由于新项目需要实现Processon一样的可视化建模，因此html相关的拖拽事件和属性都被我好好的研究了一下。\\n\\n## 1. API\\n\\n待补充\\n\\n## 2. Vue中使用\\n\\n注意使用@drag.native而非@drag\\n\\n## 3. 浏览器位置事件\\n\\n### 1. clientX/Y\\n\\n触发点相对于浏览器可视位置。\\n\\n### 2. pageX/Y\\n\\n触发点相对于\\n\\n### 3. offsetX/Y = firefox-layerX/Y\\n\\n点击处相对于被触发DOM的左上角\\n\\n### 4. screenX/Y = x/y\\n\\n相对于屏幕左上角\\n\\n![preview](https://segmentfault.com/img/bVXWPA?w=1043&h=552/view)\\n\\n> 这里有个问题，在MDNhttps://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/clientX中，所有位置的返回数值都是整数，也就是以1px为基本单位，但实际上在拖拽这样的组件位置是需要精准的，起码也要精确到两位小数，否则会产生明显位置差异。在MDN中说明CSSOM已经在将这个值由long int转为double，目前起码是在Chrome中可用，但是我的Chrome中没有显示double类型。\\n>\\n> 又去StackOverflow中搜索一下，问题很少，只有一条说可能和操作系统和电脑屏幕配置相关，打算去公司再试[2021-03-20 20:33:00]\\n\\n### 4. 节流\\n\\n由于draging事件会持续触发，实际上我们不需要那么高的触发频率，因此采用节流。\\n\\n```\\n// throttle.js\\nexport default {\\n  throttle(fn, delay) {\\n    let last = 0;\\n    \\n    return function() {\\n      let context = this;\\n      let args = arguments;\\n      let now = +new Date();\\n\\n      if(now - last > delay) {\\n        fn.apply(context, args);\\n        last = now;\\n      }\\n\\n    }\\n  }\\n}\\n```\\n\\n```\\n// 目前使用的方法是script生成函数\\nlet dragExec = methods.throttle((e) => {\\n    console.log(e);\\n  },1000);\\n\\n<template>\\n\\t<my-node @drag-ing=\'draging\'></my-node>\\n</template>\\n\\nmethod: {\\n\\tdraging(e){\\n\\t\\tdragExec(e);\\n\\t}\\n}\\n```\\n\\n### 5. 定义放置区\\n\\nMDN的方法很好。\\n\\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API\\n\\n![image-20210319162318997](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210319162318997.png)\\n\\n```\\n// vue中这样写\\n<div @dragover=\\"map_dragover_handler($event)\\">\\n\\nmethods:{\\n    map_dragover_handler(e) {\\n      e.preventDefault();\\n      e.dataTransfer.dropEffect = \\"move\\";\\n    },\\n}\\n```\\n\\n### 6. dataTransfer的神奇操作\\n\\n简单来说，dataTransfer在event对象中，触发事件可以传递值。\\n\\n但有个有趣的读写问题\\n\\n**Read/write mode**\\n读/写模式，在dragstart事件中使用，可以添加新数据到drag data store中。\\n\\n**Read-only mode**\\n只读模式，在drop事件中使用，可以读取被拖拽数据，不可添加新数据。\\n\\n**Protected mode**\\n保护模式，在所有其他的事件中使用，数据的列表可以被枚举，但是数据本身不可用且不能添加新数据。\\n\\n等于说，只有在dragstart定义变量，在drop接收这一种操作在html拖拽这部分。如果需要，那就定义全局变量吧，或者传递比如bus和vuex这样的。"},{"id":6,"comment":0,"watch":0,"virPath":"svg.md","title":"svg","path":"F:\\\\Blogs\\\\reso\\\\public\\\\svg.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-17 10:45:34","categories":["前端"],"tags":["svg"],"summary":"","content":"\\n# svg\\n\\n## 1. 与canvas对比\\n\\n### 1. 位图和矢量图\\n\\n**位图**（canvas）\\n由像素点组成绘制，放大后失真。\\n\\n**矢量图**（svg）\\n\\n以数学向量方式记录图像，与分辨率无关。\\n\\n### 2. API\\n\\ncanvas使用h5标签\\n\\nsvg使用xml\\n"},{"id":11,"comment":0,"watch":0,"virPath":"博客的脚手架开发.md","title":"博客的脚手架开发","path":"F:\\\\Blogs\\\\reso\\\\public\\\\博客的脚手架开发.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-14 18:17:57","categories":["博客"],"tags":["node","脚手架"],"summary":"","content":"\\n# 博客的脚手架开发\\n\\n## 1. 总述\\n\\n这个博客终于有我想象中的样子了！开心！鼓掌！！！\\n\\n总算走上正规军的道路（可惜还没有版本号），如果有版本号，这一定是个大更。\\n\\n临时一天自学了下node和jest，发现入手也没那么难，目前脚手架有以下功能。\\n\\n- `sy create @name` ：创建一篇文章\\n- `sy build`：生成`blogdata.json`的文件，文件包括了博客展示所需要的一些要素\\n- `sy deploy`：配置`config.js`后，一键部署\\n- 其他错误命令行：输出可供选择的命令\\n\\n**总流程**\\n\\n```\\nsy create \'文章\'\\n// 写内容\\nsy build\\nsy deploy\\n```\\n\\n## 2. create\\n\\n接受一个参数@name，会在配置的`inputDir`生成一个新的`name.md`\\n\\n```\\nsy create \'新的博客\'\\n```\\n\\n## 3. build\\n\\n目前生成的文件有三个对象，使用方式如下\\n\\n```\\nimport { Article as tmepListDatas, FileSystem as fileSystem, tagAll } from \'./blogdata.json\'\\n```\\n\\n- `Article`：文章所有信息\\n- `FileSystem`：文件系统，是一个json结构的对象\\n- `tagAll`：所有标签\\n\\n## 4. deploy\\n\\ndeploy有三个阶段\\n\\n1. 构建部署代码，需要保证`npm run build`是部署代码的npm脚本，可在Vue项目的package.json配置\\n2. 删除本地github仓库位置代码并转移代码步骤1打包好的文件，需要配置\\n3. 部署上传\\n\\n## info\\n\\n输入任意错误指令，会输出提示信息\\n\\n![image-20210314231932746](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314231932746.png)\\n\\n## 配置\\n\\n### baseConfig\\n\\n- `inputDir`：md文件放置位置，也是生成新md文件的位置\\n\\n- `outputDir`：输出博客文章信息的位置（一般在项目中）\\n\\n### projectConfig\\n\\n- `sourceDir`：代码文件目录\\n- `deployDir`：本地部署github仓库\\n- `exclude`：不希望被删除的文件或文件夹（数组类型）\\n\\n## 待解决问题\\n\\n1. 【已解决】`syntax error near unexpected token `(‘ 异常解决`\\n\\n   在文件头添加`#!/usr/bin/env node`，目的是指明用node执行程序\\n\\n2. 可以修改配置\\n\\n"},{"id":5,"comment":0,"watch":0,"virPath":"axios与mock.md","title":"axios与mock","path":"F:\\\\Blogs\\\\reso\\\\public\\\\axios与mock.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-09 17:27:00","categories":["总结"],"tags":["axios","mock","前端"],"summary":"日常总结知识","content":"# axios与mock\\r\\n\\r\\n## 1. post用法\\r\\n\\r\\n```\\r\\n      this.$axios.post(\'/TitleById\',{\\r\\n        id : this.$route.params.id\\r\\n      }).then(res => {\\r\\n        this.list = list.concat(arr);\\r\\n        if(this.$route.name === \'Article\'){\\r\\n          this.list.push({meta:{breadNav:res.data.data.title,name:null}})\\r\\n        }\\r\\n      }).catch(err => {\\r\\n        console.log(err);\\r\\n      })\\r\\n```\\r\\n\\r\\n```\\r\\nexport default {\\r\\n  \'post|/articleDetail\': option => {\\r\\n    return {\\r\\n      status: 200,\\r\\n      message: \'success\',\\r\\n      data: extractDataByArr([JSON.parse(option.body).id])\\r\\n    };\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n"},{"id":14,"comment":0,"watch":0,"virPath":"开发博客的一些点.md","title":"开发博客的一些点","path":"F:\\\\Blogs\\\\reso\\\\public\\\\开发博客的一些点.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-08 18:56:00","categories":["前端","总结"],"tags":["前端","博客"],"summary":"开发博客的一些想法，记录下来","content":"\\r\\n# 开发博客的一些点\\r\\n\\r\\n## 1. 文章详情内容可以用keep-alive\\r\\n\\r\\n文章内容赋值了就不会变，所以可以用keep-alive减少开销\\r\\n\\r\\n在router meta可以设置\\r\\n\\r\\n```javascript\\r\\n {\\r\\n  path:\'/book\',\\r\\n  name:\'book\',\\r\\n  components:Book,\\r\\n  meta:{\\r\\n     keepAlive:true //不需要被缓存的组件\\r\\n } \\r\\n```\\r\\n\\r\\n## 2. moment对象比较\\r\\n\\r\\n转化为时间戳比较\\r\\n\\r\\n```javascript\\r\\ntmepListDatas.sort((a,b) => {\\r\\n    return moment(b.time).unix() - moment(a.time).unix();\\r\\n})\\r\\n```\\r\\n\\r\\n但是注意，由于请求数据(虽然是mock到本地返回)，异步操作，因此必须在Promise.then里比较，否则比较函数可能执行完了，数组才加载进数据。\\r\\n\\r\\n## 3. mock的post\\r\\n\\r\\nmock的post传参会在config.body里面，但这是个字符串，需要JSON.parse()转成对象\\r\\n\\r\\n## 4. 博客运行时间\\r\\n\\r\\nmoemnt的diff方法\\r\\n\\r\\n`this.$moment().diff(this.$moment(this.$config.BlogStartTime),\'days\');`\\r\\n\\r\\n## 5. 在mock中返回的数据\\r\\n\\r\\n所有mock都是依赖于common.js暴露的tmepListDatas，根据esmodule的知识可知，import只会第一次复制进内存，后面的import都是从内存里拿来的同一个，所以可能存在的风险是如果在哪个地方修改了，会导致全局都修改了。\\r\\n\\r\\n## 6. 【性能优化】v-if和v-show适当使用\\r\\n\\r\\n**编译条件**：\\r\\n\\r\\nv-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译（编译被缓存？编译被缓存后，然后再切换的时候进行局部卸载);\\r\\n\\r\\nv-show是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且DOM元素保留；\\r\\n\\r\\n**性能消耗**：\\r\\n\\r\\nv-if有更高的切换消耗；\\r\\n\\r\\nv-show有更高的初始渲染消耗；\\r\\n\\r\\n## 7. 【性能优化】\\r\\n\\r\\n最初1500ms左右\\r\\n\\r\\n![image-20210311141041931](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210311141041931.png)\\r\\n\\r\\n图片懒加载后1300ms左右\\r\\n\\r\\n![image-20210311141540776](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210311141540776.png)\\r\\n\\r\\n把需要的element组件单独提取出来，可以看到没什么优化1300ms左右\\r\\n\\r\\n![image-20210311143540868](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210311143540868.png)\\r\\n\\r\\n开发脚手架后，使用脚手架生成json，可以发现超级优化到650ms左右，优化一倍，爽飞！\\r\\n\\r\\n![image-20210314192834406](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314192834406.png)\\r\\n\\r\\n把图片都扔到七牛云图床上，再次优化优化到570ms左右\\r\\n\\r\\n![image-20210314212013278](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314212013278.png)\\r\\n\\r\\n"},{"id":15,"comment":0,"watch":0,"virPath":"开发博客的问题和解决方案.md","title":"开发博客的问题和解决方案","path":"F:\\\\Blogs\\\\reso\\\\public\\\\开发博客的问题和解决方案.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-08 14:49:00","categories":["前端","博客"],"tags":["前端","博客","问题"],"summary":"开发本博客遇到的一些耗时长的问题和解决的方案","content":"\\r\\n# 开发博客的问题和解决方案\\r\\n\\r\\n## 1. 怎么解决文件查找\\r\\n\\r\\n用require.context遍历整个文件夹\\r\\n\\r\\n```\\r\\nconst filesMD = require.context(\'/public/reso\', true, /\\\\.md$/);\\r\\nconst filesMDNames = filesMD.keys(); //fileMDNames就是路径\\r\\n```\\r\\n\\r\\n## 2. 怎么解决md文件读入\\r\\n\\r\\n用mock，和axios，发现axios不仅可以读网络资源，也可以读文件\\r\\n\\r\\n方便可扩展，如果后面接着写后端，直接不用改前端\\r\\n\\r\\npublic默认会打包所有进去，但是浏览器source并不会显示\\r\\n\\r\\n## 3. 怎么解决md文件的解析\\r\\n\\r\\n用vue-markdown组件\\r\\n\\r\\ngithub-markdown-css作为样式\\r\\n\\r\\nhighlight.js代码高亮\\r\\n\\r\\n## 4. mock\\r\\n\\r\\nmock本身是通过匹配路径来拦截返回相应的数据\\r\\n\\r\\n但当有前缀相同的匹配规则时会有问题，比如\\r\\n\\r\\n两个mock规则 `mock(\'/^article\')`和`mock(\'/^articleDetail\')`\\r\\n\\r\\n就会发现articleDetail请求数据错误，返回的都是article的数据\\r\\n\\r\\n## 5. 自制文件系统\\r\\n\\r\\n```javascript\\r\\n// tempListDatas是一群路径\\r\\nExtractFileSystem(tmepListDatas)\\r\\nconst fileSystem = createNode(\'reso\',true,[],{});\\r\\n\\r\\nfunction createNode(name, isFolder, children = [], info = {}){\\r\\n  let newNode = {};\\r\\n  newNode.name = name;\\r\\n  newNode.isFolder = isFolder;\\r\\n  newNode.children = children;\\r\\n  newNode.info = info;\\r\\n  return newNode;\\r\\n}\\r\\n\\r\\n// arr是当前还没有安进去的路径数组，node是对象点，info是要填的节点信息\\r\\nfunction buildFileSystemTree(arr, node, info){\\r\\n  if(arr.length === 1) {\\r\\n    let newnode = createNode(arr[0].replace(\'.md\', \'\'), false, [], info);\\r\\n    node.children.push(newnode);\\r\\n    return;\\r\\n  }\\r\\n  else {\\r\\n    let nextnode = null;\\r\\n    for(let it of node.children){\\r\\n      if(it.name === arr[0]){\\r\\n        nextnode = it;break;\\r\\n      }\\r\\n    }\\r\\n    if(nextnode){\\r\\n      arr.shift()\\r\\n      buildFileSystemTree([...arr], nextnode, info);\\r\\n    }\\r\\n    else {\\r\\n      nextnode = createNode(arr[0], true, [], {});\\r\\n      arr.shift();\\r\\n      node.children.push(nextnode);\\r\\n      buildFileSystemTree([...arr], nextnode, info);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n```\\r\\n## 6.怎么限制摘要的行数\\r\\n\\r\\n```\\r\\n  display: -webkit-box; // 怪异盒模型\\r\\n  text-overflow: ellipsis; // 溢出部分省略\\r\\n  -webkit-box-orient: vertical; // \\r\\n  -webkit-line-clamp: 6; // 截取6行\\r\\n  word-break: break-all; // 任意断行，break-word可以根据单词打断，但是不美观\\r\\n  overflow: hidden;\\r\\n```\\r\\n\\r\\n## 7. 怎么取摘要\\r\\n\\r\\n结合6，目前是直接把所有这个博客的内容扔进去，同时由于这是md格式文本，所以先replace一下，把`#` `*`等替换掉。\\r\\n\\r\\n## 8. gitPage无法更新\\r\\n\\r\\n在确定一篇博客的模板格式后，发现gitPage构建报错了。\\r\\n\\r\\n看了这篇文章后https://www.jianshu.com/p/938ec18e572a，觉得应该和我的问题差不多，可能是jekyll不支持---这种形式的md，所以会报错，暂行办法就是把-加转义\\\\，长久之计是自己买服务器就没有这个检查了。\\r\\n\\r\\n[21:52] 又思考了一下，觉得不对。可以不用服务器，用node写个脚本，把信息存进一个js里面，还可以在这个里面写一些方法，这样就在本地加载好了所有信息，不用上传md文件，自然不用gitpage的检查，还能优化性能，省下运行代码的时间。本质没有变，都是要预处理，只不过这样就是等同build再多耗费时间，但别人在浏览器访问直接访问到数据。\\r\\n\\r\\n[2021-03-14 23:25] 问题已经解决，开发了新的脚手架，把文件内容存进json中，即省了md文件打包的大小，也不用被检查转义符号。\\r\\n\\r\\n## 9. windows写bat方便git push\\r\\n\\r\\n```\\r\\n// deploy.bat\\r\\ncd iceblue666.github.io\\r\\ngit add .\\r\\ngit commit -m \'博客更新\'\\r\\ngit push origin master\\r\\n```\\r\\n\\r\\n要注意是ANSI而不是utf8，否则会中文乱码\\r\\n\\r\\n[2021-03-14 23:25] 已经安排进脚手架工具里\\r\\n\\r\\n## 10. 【已解决】slot中的text不响应\\r\\n\\r\\n```\\r\\n// index.vue\\r\\n<cmp>{{ sth }}</cmp>\\r\\n<input v-model=\\"sth\\">\\r\\n{{ sth }}\\r\\n```\\r\\n\\r\\n```\\r\\n // cmp.vue\\r\\n <div>\\r\\n    <div>\\r\\n      cmp组件\\r\\n      {{ this.$slots.default }}\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n**问题**：在index.vue中v-model随意改变，可以看到cmp.vue中this.$slots.default确实是一起改变的，但是并不能响应。\\r\\n\\r\\n**尝试解决方案**：\\r\\n\\r\\n1. this.$set() 【失败】\\r\\n2. watch $slots deep:true 【失败】\\r\\n3. this.$forceUpdate()\\r\\n4. this.$slots.default[0].text 【成功】\\r\\n\\r\\n**推测**：text应该是在Vue考虑中太小了，不值得响应，否则整个花销会很大，或者是在编写Vue的时候没有考虑，而后续改的代价高就改不了，毕竟一般不会有人这么用，而且不这么用也有其他方法解决，比如绑定props上。\\r\\n\\r\\n**结果**：自己犯蠢，明明打印出来了是个数组，不仔细看，菜这一个字都顶到脑门上了！\\r\\n\\r\\n## 11. 【未解决】SEO检索\\r\\n\\r\\ngithub不支持爬取，所以SEO一定检测不到\\r\\n\\r\\n## 12. 【半解决】图床\\r\\n\\r\\n首先注册七牛云，需要实名认证，并且自带一个域名，自动情况下会有一个测试域名，但是测试域名一个月后会回收，因此最好绑定自己的域名。\\r\\n\\r\\n用PicGo配置七牛云，上传图片\\r\\n\\r\\n待解决：域名备案\\r\\n\\r\\n【扩展】：在Typora中设置偏好设置，可以自动上传图床。\\r\\n\\r\\n![image-20210314212555454](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314212555454.png)\\r\\n\\r\\n## 13. 【未解决】TOC\\r\\n## 14. 【未解决】搜索\\r\\n## 15. 【未解决】标签\\r\\n\\r\\n## 16.  科学上传\\r\\n\\r\\n有时候github上传返回443\\r\\n\\r\\n执行下面代码试试\\r\\n\\r\\n```\\r\\ngit config --global --unset http.proxy \\r\\ngit config --global --unset https.proxy \\r\\n```\\r\\n\\r\\n配置科学\\r\\n\\r\\n```\\r\\ngit config --global http.proxy \'http://127.0.0.1:1080\'\\r\\ngit config --global https.proxy \'https://127.0.0.1:1080\'\\r\\n```\\r\\n\\r\\n"},{"id":8,"comment":0,"watch":0,"virPath":"Vue\\\\Vue的坑.md","title":"Vue的坑","path":"F:\\\\Blogs\\\\reso\\\\public\\\\Vue\\\\Vue的坑.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-04 16:56:00","categories":["前端","总结"],"tags":["前端","知识点汇总","学习","Vue","坑"],"summary":"Vue中有挺多坑的，记录一下吧","content":"# Vue的坑\\r\\n\\r\\n## 1. vue检测prop和data是否变化，不变化直接复用原来的组件\\r\\n\\r\\n```vue\\r\\n<tabs :value=\\"value\\" @change=\\"changeTabValue\\">\\r\\n    <tab label=\\"tab1\\" index=\\"1\\">\\r\\n    \\t<span>tab content 1 {{ sth }}</span>\\r\\n    </tab>\\r\\n    <tab label=\\"tab3\\" index=\\"3\\">\\r\\n      \\t<span>tab content 3</span>\\r\\n     </tab>\\r\\n</tabs>\\r\\n<input v-model=\\"sth\\" />\\r\\n```\\r\\n\\r\\n会发现改变input时候，tab1渲染出来的span里的内容没变，这就是因为Vue检测prop和data是否变了，而没管插槽。\\r\\n\\r\\n### 2. 记一下\\r\\n\\r\\n1. 用<transition>组件进行过渡的时候，屏幕会闪一下，可能是mode问题，默认是\\"in-out\\"，改成\\"out-in\\"就好了。\\r\\n\\r\\n2. 既然 Vuex 的 store 中的状态是响应式的，那么当我们变更状态时，监视状态的 Vue 组件也会自动更新。这也意味着 Vuex 中的 mutation 也需要与使用 Vue 一样遵守一些注意事项：\\r\\n   1. 最好提前在 store 中初始化好所有所需属性。\\r\\n   2. 当需要在对象上添加新属性时，应该\\r\\n\\r\\n    - 使用 `Vue.set(obj, \'newProp\', 123)`, 或者\\r\\n\\r\\n    - 以新对象替换老对象。例如，利用对象展开运算符可以这样写：\\r\\n\\r\\n      ```js\\r\\n      state.obj = { ...state.obj, newProp: 123 }\\r\\n      ```"},{"id":7,"comment":0,"watch":0,"virPath":"Vue\\\\vuex.md","title":"vuex","path":"F:\\\\Blogs\\\\reso\\\\public\\\\Vue\\\\vuex.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-02-27 20:05:00","categories":["前端","vue","vuex"],"tags":["vuex","vue"],"summary":"vuex的简要说明，快速开发","content":"# vuex\\r\\n\\r\\n## 1. 总\\r\\n\\r\\nstate、getter、mutations、actions、modules\\r\\n\\r\\nstate是状态保存\\r\\n\\r\\n修改state的唯一方法是提交mutation，但是 mutations中的方法是同步的\\r\\n\\r\\n**为什么必须是同步的？**\\r\\n\\r\\n主要原因在于同步异步混合，devtools不容易调试追踪，实际上数据的改变是不会有错误的。\\r\\n\\r\\nactions中可以提交mutations\\r\\n\\r\\n## 2. mapActions映射\\r\\n\\r\\n多个映射\\r\\n\\r\\n```\\r\\nimport { mapActions } from \\"vuex\\";\\r\\n methods: { \\r\\n    ...mapActions(\\r\\n      {\\r\\n        toggleSideBar: \\"app/toggleSideBar\\",\\r\\n        closeSideBar: \\"app/closeSideBar\\",\\r\\n      }\\r\\n    ),\\r\\n  },\\r\\n```\\r\\n\\r\\n"},{"id":9,"comment":0,"watch":0,"virPath":"webpack的坑.md","title":"webpack的坑","path":"F:\\\\Blogs\\\\reso\\\\public\\\\webpack的坑.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-02-19 22:08:00","categories":["webpack","前端"],"tags":["webpack","Bug"],"summary":"遇到的一些webpack的坑，记下来","content":"\\r\\n[TOC]\\r\\n\\r\\n# webpack的坑\\r\\n\\r\\n## 错误\\r\\n\\r\\n### 1. css顺序错误\\r\\n\\r\\n解析是逆向的，自下而上\\r\\n\\r\\n这个不行\\r\\n\\r\\n```js\\r\\nconfig.module.rules.push({\\r\\n    test: /\\\\.styl/,\\r\\n    use: [\\r\\n        MiniCssExtractPlugin.loader,\\r\\n        \'postcss-loader\',\\r\\n        \'css-loader\',\\r\\n        \'stylus-loader\'\\r\\n    ]\\r\\n})\\r\\n```\\r\\n\\r\\n这个行\\r\\n\\r\\n```js\\r\\nconfig.module.rules.push({\\r\\n    test: /\\\\.styl/,\\r\\n    use: [\\r\\n        MiniCssExtractPlugin.loader,\\r\\n        \'css-loader\',\\r\\n        \'postcss-loader\',\\r\\n        \'stylus-loader\'\\r\\n    ]\\r\\n})\\r\\n```\\r\\n\\r\\n### 2. module.exports\\r\\n\\r\\n​\\t不要写成`module.export`\\r\\n\\r\\n### 3. rules里面的test是正则，不要手贱加引号变成字符串\\r\\n\\r\\n如下找不出原因，还看到模块没有被loader处理，看着还很对。\\r\\n\\r\\n```js\\r\\nconfig.module.rules.push({\\r\\n    test: \'/\\\\.styl/\',\\r\\n    use: [\\r\\n        MiniCssExtractPlugin.loader,\\r\\n        \'css-loader\',\\r\\n        \'postcss-loader\',\\r\\n        \'stylus-loader\'\\r\\n    ]\\r\\n})\\r\\n```\\r\\n\\r\\n### 4. [待解决]vue-style-loader失效\\r\\n\\r\\nhttps://blog.csdn.net/vv_bug/article/details/108148263\\r\\n\\r\\n消极办法：回退css-loader到v3\\r\\n\\r\\n或修改配置：\\r\\n\\r\\n```\\r\\n{\\r\\n    loader: \'css-loader\',\\r\\n    options: {\\r\\n        esModule: false\\r\\n    }\\r\\n}\\r\\n```"},{"id":4,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\day4.md","title":"Day 4---红与黑(1113)","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\day4.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-22 23:40:00","categories":["算法"],"tags":["算法","ACWing","BFS","DFS","种子填充"],"summary":"ACWing寒假题目 Day04","content":"# Day 4---红与黑(1113)\\r\\n\\r\\n## 关键点\\r\\n\\r\\n洪水灌溉算法：\\r\\n\\r\\nBFS（最短距离）\\r\\n\\r\\nDFS（更方便）\\r\\n\\r\\n## AC代码（BFS)\\r\\n\\r\\n```c++\\r\\n#include<iostream>\\r\\n#include<algorithm>\\r\\n#include<queue>\\r\\nusing namespace std;\\r\\n\\r\\n#define x first\\r\\n#define y second\\r\\n\\r\\ntypedef pair<int, int>PII;\\r\\n\\r\\nconst int N = 25;\\r\\nchar map[N][N];\\r\\n\\r\\nint n, m;\\r\\n\\r\\nint bfs(int orix, int oriy) {\\r\\n    queue<PII>q;\\r\\n    q.push({orix, oriy});\\r\\n    int res = 0;\\r\\n\\r\\n    int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};\\r\\n\\r\\n    while(q.size()){\\r\\n        auto t = q.front();\\r\\n        q.pop();\\r\\n        res ++;\\r\\n        \\r\\n        for(int i = 0; i < 4; i ++){\\r\\n            int x = t.x + dx[i], y = t.y + dy[i];\\r\\n            if(x < 0 || y < 0 || x >= n || y >= m || map[x][y] != \'.\') continue;\\r\\n            map[x][y] = \'#\';\\r\\n            q.push({x, y});\\r\\n            \\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return res;\\r\\n}\\r\\n\\r\\nint main(){\\r\\n    \\r\\n    while(cin >> m >> n, n || m){\\r\\n        for(int i = 0;i < n; i++) cin >> map[i];\\r\\n        int x, y;\\r\\n        for(int i = 0; i < n; i++){\\r\\n            for(int j = 0; j < m; j++){\\r\\n                if(map[i][j] == \'@\'){\\r\\n                    x = i, y = j;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        cout << bfs(x, y) <<endl;\\r\\n    }    \\r\\n    return 0;\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n"},{"id":3,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\day3.md","title":"Day 3---蛇形矩阵(756)","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\day3.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-22 21:07:00","categories":["算法"],"tags":["算法","ACWing","蛇形矩阵"],"summary":"ACWing寒假题目 Day03","content":"# Day 3---蛇形矩阵(756)\\r\\n\\r\\n## 关键点\\r\\n\\r\\n预设方向数组\\r\\n\\r\\n`const int dx[] = {0, 1, 0, -1};`\\r\\n`const int dy[] = {1, 0, -1, 0};`\\r\\n\\r\\n## AC代码\\r\\n\\r\\n```c++\\r\\n#include<iostream>\\r\\nusing namespace std;\\r\\n\\r\\nconst int N = 110;\\r\\nint res[N][N];\\r\\n\\r\\nconst int dx[] = {0, 1, 0, -1};\\r\\nconst int dy[] = {1, 0, -1, 0};\\r\\nint main(){\\r\\n    int n, m;\\r\\n    cin>>n>>m;\\r\\n    int cnt = 1;\\r\\n    int i = 0, j = -1;\\r\\n    int dir = 0;\\r\\n    while(1){\\r\\n        int xx = i + dx[dir];\\r\\n        int yy = j + dy[dir];\\r\\n        if(!res[xx][yy] && xx >= 0 && xx < n && yy >= 0 && yy < m){\\r\\n            res[xx][yy] = cnt++;\\r\\n            i = xx, j = yy;\\r\\n        }\\r\\n        else{\\r\\n            dir++;dir%=4;\\r\\n        }\\r\\n        if(cnt == n*m+1) break;\\r\\n    }\\r\\n    for(int i = 0;i < n; i++){\\r\\n        for(int j = 0; j < m; j++){\\r\\n            cout<<res[i][j]<<\\" \\";\\r\\n        }\\r\\n        cout<<endl;\\r\\n    }\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n"},{"id":17,"comment":0,"watch":0,"virPath":"数据范围反推时间复杂度.md","title":"数据范围反推时间复杂度","path":"F:\\\\Blogs\\\\reso\\\\public\\\\数据范围反推时间复杂度.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-19 21:49:00","categories":["算法"],"tags":["算法","算法复杂度"],"summary":"大佬的总结，fork一下，很有用","content":"\\r\\n# 数据范围反推时间复杂度\\r\\n\\r\\n一般ACM或者笔试题的时间限制是1秒或2秒。\\r\\n在这种情况下，C++代码中的操作次数控制在 107∼108107∼108 为最佳。\\r\\n\\r\\n下面给出在不同数据范围下，代码的时间复杂度和算法该如何选择：\\r\\n\\r\\nn≤30n≤30, 指数级别, dfs+剪枝，状态压缩dp\\r\\nn≤100n≤100 => O(n3)O(n3)，floyd，dp，高斯消元\\r\\nn≤1000n≤1000 => O(n2)O(n2)，O(n2logn)O(n2logn)，dp，二分，朴素版Dijkstra、朴素版Prim、Bellman-Ford\\r\\nn≤10000n≤10000 => O(n∗n√)O(n∗n)，块状链表、分块、莫队\\r\\nn≤100000n≤100000 => O(nlogn)O(nlogn) => 各种sort，线段树、树状数组、set/map、heap、拓扑排序、dijkstra+heap、prim+heap、spfa、求凸包、求半平面交、二分、CDQ分治、整体二分\\r\\nn≤1000000n≤1000000 => O(n)O(n), 以及常数较小的 O(nlogn)O(nlogn) 算法 => 单调队列、 hash、双指针扫描、并查集，kmp、AC自动机，常数比较小的 O(nlogn)O(nlogn) 的做法：sort、树状数组、heap、dijkstra、spfa\\r\\nn≤10000000n≤10000000 => O(n)O(n)，双指针扫描、kmp、AC自动机、线性筛素数\\r\\nn≤109n≤109 => O(n√)O(n)，判断质数\\r\\nn≤1018n≤1018 => O(logn)O(logn)，最大公约数，快速幂\\r\\nn≤101000n≤101000 => O((logn)2)O((logn)2)，高精度加减乘除\\r\\nn≤10100000n≤10100000 => O(logk×loglogk)，k表示位数O(logk×loglogk)，k表示位数，高精度加减、FFT/NTT\\r\\n\\r\\n作者：yxc\\r\\n链接：https://www.acwing.com/blog/content/32/\\r\\n来源：AcWing\\r\\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"},{"id":2,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\day1.md","title":"Day 1---货舱选址(104)","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\day1.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-14 21:29:00","categories":["算法"],"tags":["算法","ACWing","最小"],"summary":"ACWing寒假题目 Day01","content":"\\r\\n# Day 1---货舱选址(104)\\r\\n\\r\\n## 数学原理\\r\\n\\r\\n|x - a| + |x - b| >= |a - b|\\r\\n\\r\\n当 x 取在 a和b中间的任意点，左式取到最小值。\\r\\n\\r\\n那么目标函数|a1 - x| + |a2 - x| + ... + | an - x| 若要取得最小值，将a1-an一组，a2-a(n-1)一组，两两一组，那么当x取到所有数的中位数，就满足条件，取得最小值|an - a1|+|a(n-1) - a2 | + .......\\r\\n\\r\\n## AC代码\\r\\n\\r\\n```cpp\\r\\n#include<iostream>\\r\\n#include<algorithm>\\r\\nusing namespace std;\\r\\n\\r\\nint a[100050];\\r\\nint main(){\\r\\n    int n;\\r\\n    cin>>n;\\r\\n    for(int i = 0;i < n; i++){\\r\\n        cin >> a[i];\\r\\n    }\\r\\n    sort(a, a+n);\\r\\n    int res = 0;\\r\\n    for(int i = 0; i < n; i++){\\r\\n        res += abs(a[i] - a[n/2]);\\r\\n    }\\r\\n    cout<<res;\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n"},{"id":1,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\All.md","title":"ALL汇总","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\All.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-14 21:20:00","categories":["算法","汇总"],"tags":["算法","ACWing","汇总"],"summary":"ACWing寒假题目总结，待补充...","content":"\\r\\n# ALL汇总\\r\\n\\r\\n| 天数  | 内容问题                                 | 简单说明              |\\r\\n| ----- | ---------------------------------------- | --------------------- |\\r\\n| Day 1 | 一维数轴找一个点使得该点到所有点距离最短 | 中位数为最优解        |\\r\\n| Day 2 | DP模板基础题，三角形                     |                       |\\r\\n| Day 3 | 蛇形迷宫，填数字                         | 预设方向数组dx,dy转圈 |\\r\\n| Day 4 | 洪水灌溉算法                             | BFS\\\\DFS               |"},{"id":16,"comment":0,"watch":0,"virPath":"我为什么睡不着.md","title":"我为什么睡不着","path":"F:\\\\Blogs\\\\reso\\\\public\\\\我为什么睡不着.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2020-02-19 22:08:00","categories":["所思所想"],"tags":["思考"],"summary":"","content":"\\r\\n# 我为什么睡不着\\r\\n\\r\\n我害怕黑夜，是因为我知道已失去光阴。睡不着，是因为害怕明天的自己依然是昨天的自己，越是害怕，就越是无法改变自己，逃离。一个接近完美的人只会让自己越来越完美，一个很烂的人只能让自己越来越烂。不是无法改变，只是觉得已经来不及了。\\r\\n\\r\\n"}],"FileSystem":{"label":"reso","isFolder":true,"children":[{"label":"AcWing每日一题","isFolder":true,"children":[{"label":"All","isFolder":false,"children":[],"info":{"id":1,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\All.md","title":"ALL汇总","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\All.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-14 21:20:00","categories":["算法","汇总"],"tags":["算法","ACWing","汇总"],"summary":"ACWing寒假题目总结，待补充...","content":"\\r\\n# ALL汇总\\r\\n\\r\\n| 天数  | 内容问题                                 | 简单说明              |\\r\\n| ----- | ---------------------------------------- | --------------------- |\\r\\n| Day 1 | 一维数轴找一个点使得该点到所有点距离最短 | 中位数为最优解        |\\r\\n| Day 2 | DP模板基础题，三角形                     |                       |\\r\\n| Day 3 | 蛇形迷宫，填数字                         | 预设方向数组dx,dy转圈 |\\r\\n| Day 4 | 洪水灌溉算法                             | BFS\\\\DFS               |"}},{"label":"day1","isFolder":false,"children":[],"info":{"id":2,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\day1.md","title":"Day 1---货舱选址(104)","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\day1.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-14 21:29:00","categories":["算法"],"tags":["算法","ACWing","最小"],"summary":"ACWing寒假题目 Day01","content":"\\r\\n# Day 1---货舱选址(104)\\r\\n\\r\\n## 数学原理\\r\\n\\r\\n|x - a| + |x - b| >= |a - b|\\r\\n\\r\\n当 x 取在 a和b中间的任意点，左式取到最小值。\\r\\n\\r\\n那么目标函数|a1 - x| + |a2 - x| + ... + | an - x| 若要取得最小值，将a1-an一组，a2-a(n-1)一组，两两一组，那么当x取到所有数的中位数，就满足条件，取得最小值|an - a1|+|a(n-1) - a2 | + .......\\r\\n\\r\\n## AC代码\\r\\n\\r\\n```cpp\\r\\n#include<iostream>\\r\\n#include<algorithm>\\r\\nusing namespace std;\\r\\n\\r\\nint a[100050];\\r\\nint main(){\\r\\n    int n;\\r\\n    cin>>n;\\r\\n    for(int i = 0;i < n; i++){\\r\\n        cin >> a[i];\\r\\n    }\\r\\n    sort(a, a+n);\\r\\n    int res = 0;\\r\\n    for(int i = 0; i < n; i++){\\r\\n        res += abs(a[i] - a[n/2]);\\r\\n    }\\r\\n    cout<<res;\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n"}},{"label":"day3","isFolder":false,"children":[],"info":{"id":3,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\day3.md","title":"Day 3---蛇形矩阵(756)","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\day3.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-22 21:07:00","categories":["算法"],"tags":["算法","ACWing","蛇形矩阵"],"summary":"ACWing寒假题目 Day03","content":"# Day 3---蛇形矩阵(756)\\r\\n\\r\\n## 关键点\\r\\n\\r\\n预设方向数组\\r\\n\\r\\n`const int dx[] = {0, 1, 0, -1};`\\r\\n`const int dy[] = {1, 0, -1, 0};`\\r\\n\\r\\n## AC代码\\r\\n\\r\\n```c++\\r\\n#include<iostream>\\r\\nusing namespace std;\\r\\n\\r\\nconst int N = 110;\\r\\nint res[N][N];\\r\\n\\r\\nconst int dx[] = {0, 1, 0, -1};\\r\\nconst int dy[] = {1, 0, -1, 0};\\r\\nint main(){\\r\\n    int n, m;\\r\\n    cin>>n>>m;\\r\\n    int cnt = 1;\\r\\n    int i = 0, j = -1;\\r\\n    int dir = 0;\\r\\n    while(1){\\r\\n        int xx = i + dx[dir];\\r\\n        int yy = j + dy[dir];\\r\\n        if(!res[xx][yy] && xx >= 0 && xx < n && yy >= 0 && yy < m){\\r\\n            res[xx][yy] = cnt++;\\r\\n            i = xx, j = yy;\\r\\n        }\\r\\n        else{\\r\\n            dir++;dir%=4;\\r\\n        }\\r\\n        if(cnt == n*m+1) break;\\r\\n    }\\r\\n    for(int i = 0;i < n; i++){\\r\\n        for(int j = 0; j < m; j++){\\r\\n            cout<<res[i][j]<<\\" \\";\\r\\n        }\\r\\n        cout<<endl;\\r\\n    }\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n"}},{"label":"day4","isFolder":false,"children":[],"info":{"id":4,"comment":0,"watch":0,"virPath":"AcWing每日一题\\\\day4.md","title":"Day 4---红与黑(1113)","path":"F:\\\\Blogs\\\\reso\\\\public\\\\AcWing每日一题\\\\day4.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-22 23:40:00","categories":["算法"],"tags":["算法","ACWing","BFS","DFS","种子填充"],"summary":"ACWing寒假题目 Day04","content":"# Day 4---红与黑(1113)\\r\\n\\r\\n## 关键点\\r\\n\\r\\n洪水灌溉算法：\\r\\n\\r\\nBFS（最短距离）\\r\\n\\r\\nDFS（更方便）\\r\\n\\r\\n## AC代码（BFS)\\r\\n\\r\\n```c++\\r\\n#include<iostream>\\r\\n#include<algorithm>\\r\\n#include<queue>\\r\\nusing namespace std;\\r\\n\\r\\n#define x first\\r\\n#define y second\\r\\n\\r\\ntypedef pair<int, int>PII;\\r\\n\\r\\nconst int N = 25;\\r\\nchar map[N][N];\\r\\n\\r\\nint n, m;\\r\\n\\r\\nint bfs(int orix, int oriy) {\\r\\n    queue<PII>q;\\r\\n    q.push({orix, oriy});\\r\\n    int res = 0;\\r\\n\\r\\n    int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};\\r\\n\\r\\n    while(q.size()){\\r\\n        auto t = q.front();\\r\\n        q.pop();\\r\\n        res ++;\\r\\n        \\r\\n        for(int i = 0; i < 4; i ++){\\r\\n            int x = t.x + dx[i], y = t.y + dy[i];\\r\\n            if(x < 0 || y < 0 || x >= n || y >= m || map[x][y] != \'.\') continue;\\r\\n            map[x][y] = \'#\';\\r\\n            q.push({x, y});\\r\\n            \\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return res;\\r\\n}\\r\\n\\r\\nint main(){\\r\\n    \\r\\n    while(cin >> m >> n, n || m){\\r\\n        for(int i = 0;i < n; i++) cin >> map[i];\\r\\n        int x, y;\\r\\n        for(int i = 0; i < n; i++){\\r\\n            for(int j = 0; j < m; j++){\\r\\n                if(map[i][j] == \'@\'){\\r\\n                    x = i, y = j;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        cout << bfs(x, y) <<endl;\\r\\n    }    \\r\\n    return 0;\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n"}}],"info":{}},{"label":"axios与mock","isFolder":false,"children":[],"info":{"id":5,"comment":0,"watch":0,"virPath":"axios与mock.md","title":"axios与mock","path":"F:\\\\Blogs\\\\reso\\\\public\\\\axios与mock.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-09 17:27:00","categories":["总结"],"tags":["axios","mock","前端"],"summary":"日常总结知识","content":"# axios与mock\\r\\n\\r\\n## 1. post用法\\r\\n\\r\\n```\\r\\n      this.$axios.post(\'/TitleById\',{\\r\\n        id : this.$route.params.id\\r\\n      }).then(res => {\\r\\n        this.list = list.concat(arr);\\r\\n        if(this.$route.name === \'Article\'){\\r\\n          this.list.push({meta:{breadNav:res.data.data.title,name:null}})\\r\\n        }\\r\\n      }).catch(err => {\\r\\n        console.log(err);\\r\\n      })\\r\\n```\\r\\n\\r\\n```\\r\\nexport default {\\r\\n  \'post|/articleDetail\': option => {\\r\\n    return {\\r\\n      status: 200,\\r\\n      message: \'success\',\\r\\n      data: extractDataByArr([JSON.parse(option.body).id])\\r\\n    };\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n"}},{"label":"svg","isFolder":false,"children":[],"info":{"id":6,"comment":0,"watch":0,"virPath":"svg.md","title":"svg","path":"F:\\\\Blogs\\\\reso\\\\public\\\\svg.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-17 10:45:34","categories":["前端"],"tags":["svg"],"summary":"","content":"\\n# svg\\n\\n## 1. 与canvas对比\\n\\n### 1. 位图和矢量图\\n\\n**位图**（canvas）\\n由像素点组成绘制，放大后失真。\\n\\n**矢量图**（svg）\\n\\n以数学向量方式记录图像，与分辨率无关。\\n\\n### 2. API\\n\\ncanvas使用h5标签\\n\\nsvg使用xml\\n"}},{"label":"Vue","isFolder":true,"children":[{"label":"vuex","isFolder":false,"children":[],"info":{"id":7,"comment":0,"watch":0,"virPath":"Vue\\\\vuex.md","title":"vuex","path":"F:\\\\Blogs\\\\reso\\\\public\\\\Vue\\\\vuex.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-02-27 20:05:00","categories":["前端","vue","vuex"],"tags":["vuex","vue"],"summary":"vuex的简要说明，快速开发","content":"# vuex\\r\\n\\r\\n## 1. 总\\r\\n\\r\\nstate、getter、mutations、actions、modules\\r\\n\\r\\nstate是状态保存\\r\\n\\r\\n修改state的唯一方法是提交mutation，但是 mutations中的方法是同步的\\r\\n\\r\\n**为什么必须是同步的？**\\r\\n\\r\\n主要原因在于同步异步混合，devtools不容易调试追踪，实际上数据的改变是不会有错误的。\\r\\n\\r\\nactions中可以提交mutations\\r\\n\\r\\n## 2. mapActions映射\\r\\n\\r\\n多个映射\\r\\n\\r\\n```\\r\\nimport { mapActions } from \\"vuex\\";\\r\\n methods: { \\r\\n    ...mapActions(\\r\\n      {\\r\\n        toggleSideBar: \\"app/toggleSideBar\\",\\r\\n        closeSideBar: \\"app/closeSideBar\\",\\r\\n      }\\r\\n    ),\\r\\n  },\\r\\n```\\r\\n\\r\\n"}},{"label":"Vue的坑","isFolder":false,"children":[],"info":{"id":8,"comment":0,"watch":0,"virPath":"Vue\\\\Vue的坑.md","title":"Vue的坑","path":"F:\\\\Blogs\\\\reso\\\\public\\\\Vue\\\\Vue的坑.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-04 16:56:00","categories":["前端","总结"],"tags":["前端","知识点汇总","学习","Vue","坑"],"summary":"Vue中有挺多坑的，记录一下吧","content":"# Vue的坑\\r\\n\\r\\n## 1. vue检测prop和data是否变化，不变化直接复用原来的组件\\r\\n\\r\\n```vue\\r\\n<tabs :value=\\"value\\" @change=\\"changeTabValue\\">\\r\\n    <tab label=\\"tab1\\" index=\\"1\\">\\r\\n    \\t<span>tab content 1 {{ sth }}</span>\\r\\n    </tab>\\r\\n    <tab label=\\"tab3\\" index=\\"3\\">\\r\\n      \\t<span>tab content 3</span>\\r\\n     </tab>\\r\\n</tabs>\\r\\n<input v-model=\\"sth\\" />\\r\\n```\\r\\n\\r\\n会发现改变input时候，tab1渲染出来的span里的内容没变，这就是因为Vue检测prop和data是否变了，而没管插槽。\\r\\n\\r\\n### 2. 记一下\\r\\n\\r\\n1. 用<transition>组件进行过渡的时候，屏幕会闪一下，可能是mode问题，默认是\\"in-out\\"，改成\\"out-in\\"就好了。\\r\\n\\r\\n2. 既然 Vuex 的 store 中的状态是响应式的，那么当我们变更状态时，监视状态的 Vue 组件也会自动更新。这也意味着 Vuex 中的 mutation 也需要与使用 Vue 一样遵守一些注意事项：\\r\\n   1. 最好提前在 store 中初始化好所有所需属性。\\r\\n   2. 当需要在对象上添加新属性时，应该\\r\\n\\r\\n    - 使用 `Vue.set(obj, \'newProp\', 123)`, 或者\\r\\n\\r\\n    - 以新对象替换老对象。例如，利用对象展开运算符可以这样写：\\r\\n\\r\\n      ```js\\r\\n      state.obj = { ...state.obj, newProp: 123 }\\r\\n      ```"}}],"info":{}},{"label":"webpack的坑","isFolder":false,"children":[],"info":{"id":9,"comment":0,"watch":0,"virPath":"webpack的坑.md","title":"webpack的坑","path":"F:\\\\Blogs\\\\reso\\\\public\\\\webpack的坑.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-02-19 22:08:00","categories":["webpack","前端"],"tags":["webpack","Bug"],"summary":"遇到的一些webpack的坑，记下来","content":"\\r\\n[TOC]\\r\\n\\r\\n# webpack的坑\\r\\n\\r\\n## 错误\\r\\n\\r\\n### 1. css顺序错误\\r\\n\\r\\n解析是逆向的，自下而上\\r\\n\\r\\n这个不行\\r\\n\\r\\n```js\\r\\nconfig.module.rules.push({\\r\\n    test: /\\\\.styl/,\\r\\n    use: [\\r\\n        MiniCssExtractPlugin.loader,\\r\\n        \'postcss-loader\',\\r\\n        \'css-loader\',\\r\\n        \'stylus-loader\'\\r\\n    ]\\r\\n})\\r\\n```\\r\\n\\r\\n这个行\\r\\n\\r\\n```js\\r\\nconfig.module.rules.push({\\r\\n    test: /\\\\.styl/,\\r\\n    use: [\\r\\n        MiniCssExtractPlugin.loader,\\r\\n        \'css-loader\',\\r\\n        \'postcss-loader\',\\r\\n        \'stylus-loader\'\\r\\n    ]\\r\\n})\\r\\n```\\r\\n\\r\\n### 2. module.exports\\r\\n\\r\\n​\\t不要写成`module.export`\\r\\n\\r\\n### 3. rules里面的test是正则，不要手贱加引号变成字符串\\r\\n\\r\\n如下找不出原因，还看到模块没有被loader处理，看着还很对。\\r\\n\\r\\n```js\\r\\nconfig.module.rules.push({\\r\\n    test: \'/\\\\.styl/\',\\r\\n    use: [\\r\\n        MiniCssExtractPlugin.loader,\\r\\n        \'css-loader\',\\r\\n        \'postcss-loader\',\\r\\n        \'stylus-loader\'\\r\\n    ]\\r\\n})\\r\\n```\\r\\n\\r\\n### 4. [待解决]vue-style-loader失效\\r\\n\\r\\nhttps://blog.csdn.net/vv_bug/article/details/108148263\\r\\n\\r\\n消极办法：回退css-loader到v3\\r\\n\\r\\n或修改配置：\\r\\n\\r\\n```\\r\\n{\\r\\n    loader: \'css-loader\',\\r\\n    options: {\\r\\n        esModule: false\\r\\n    }\\r\\n}\\r\\n```"}},{"label":"Windows服务器配置nginx","isFolder":false,"children":[],"info":{"id":10,"comment":0,"watch":0,"virPath":"Windows服务器配置nginx.md","title":"Windows服务器配置nginx","path":"F:\\\\Blogs\\\\reso\\\\public\\\\Windows服务器配置nginx.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-22 19:28:12","categories":["服务器"],"tags":["windows","nginx"],"summary":"","content":"\\n# Windows服务器配置nginx\\n\\n由于整个项目都要自己做，所以被分配了一个服务器后，自己就要从0开始配置。首先就要配置web服务器。\\n\\n其实不管是windows，linux服务器配置nginx的博客都很多了，但问题是往往在本地输入一个localhost:80，能访问到nginx的欢迎页面就完了，但是如何让别的主机访问真就一点没有呗，感情nginx就是个玩具，在自己的主机上玩玩就得了。\\n\\n再进一步，如何让局域网（内网）主机能够访问？\\n\\n这里是windows服务器的配置过程。\\n\\n1. 下载nginx，解压。\\n\\n2. 放到目标位置，`start nginx`，访问localhost:80成功看到欢迎页面即算安装成功。\\n\\n   ![image-20210322193610208](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322193610208.png)\\n\\n3. 更改自己的服务`nginx-1.18.0/conf/nginx.conf` server的server_name为自己的ip\\n\\n   ![image-20210322194351329](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322194351329.png)\\n\\n   再本地运行ip:80如果还能看到nginx的欢迎页面，证明服务成功。\\n\\n4. **很关键**，那么如何让局域网的主机访问，其实不需要更改nginx的配置，而是要把windows服务器的防火墙设置一下。\\n\\n   比如，我想暴露服务的端口是80，那么点击控制面板，点击系统与安全，点击防火墙。\\n\\n   ![image-20210322194716750](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322194716750.png)\\n\\n   点击高级设置，左侧有个入站规则，点击后右侧有个新建规则\\n\\n   ![image-20210322194818068](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210322194818068.png)\\n\\n   接下来，设置号端口号，一路下一步就可以了。\\n\\n   局域网内其他主机就可以访问服务器了！"}},{"label":"博客的脚手架开发","isFolder":false,"children":[],"info":{"id":11,"comment":0,"watch":0,"virPath":"博客的脚手架开发.md","title":"博客的脚手架开发","path":"F:\\\\Blogs\\\\reso\\\\public\\\\博客的脚手架开发.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-14 18:17:57","categories":["博客"],"tags":["node","脚手架"],"summary":"","content":"\\n# 博客的脚手架开发\\n\\n## 1. 总述\\n\\n这个博客终于有我想象中的样子了！开心！鼓掌！！！\\n\\n总算走上正规军的道路（可惜还没有版本号），如果有版本号，这一定是个大更。\\n\\n临时一天自学了下node和jest，发现入手也没那么难，目前脚手架有以下功能。\\n\\n- `sy create @name` ：创建一篇文章\\n- `sy build`：生成`blogdata.json`的文件，文件包括了博客展示所需要的一些要素\\n- `sy deploy`：配置`config.js`后，一键部署\\n- 其他错误命令行：输出可供选择的命令\\n\\n**总流程**\\n\\n```\\nsy create \'文章\'\\n// 写内容\\nsy build\\nsy deploy\\n```\\n\\n## 2. create\\n\\n接受一个参数@name，会在配置的`inputDir`生成一个新的`name.md`\\n\\n```\\nsy create \'新的博客\'\\n```\\n\\n## 3. build\\n\\n目前生成的文件有三个对象，使用方式如下\\n\\n```\\nimport { Article as tmepListDatas, FileSystem as fileSystem, tagAll } from \'./blogdata.json\'\\n```\\n\\n- `Article`：文章所有信息\\n- `FileSystem`：文件系统，是一个json结构的对象\\n- `tagAll`：所有标签\\n\\n## 4. deploy\\n\\ndeploy有三个阶段\\n\\n1. 构建部署代码，需要保证`npm run build`是部署代码的npm脚本，可在Vue项目的package.json配置\\n2. 删除本地github仓库位置代码并转移代码步骤1打包好的文件，需要配置\\n3. 部署上传\\n\\n## info\\n\\n输入任意错误指令，会输出提示信息\\n\\n![image-20210314231932746](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314231932746.png)\\n\\n## 配置\\n\\n### baseConfig\\n\\n- `inputDir`：md文件放置位置，也是生成新md文件的位置\\n\\n- `outputDir`：输出博客文章信息的位置（一般在项目中）\\n\\n### projectConfig\\n\\n- `sourceDir`：代码文件目录\\n- `deployDir`：本地部署github仓库\\n- `exclude`：不希望被删除的文件或文件夹（数组类型）\\n\\n## 待解决问题\\n\\n1. 【已解决】`syntax error near unexpected token `(‘ 异常解决`\\n\\n   在文件头添加`#!/usr/bin/env node`，目的是指明用node执行程序\\n\\n2. 可以修改配置\\n\\n"}},{"label":"可拖拽组件","isFolder":false,"children":[],"info":{"id":12,"comment":0,"watch":0,"virPath":"可拖拽组件.md","title":"可拖拽组件","path":"F:\\\\Blogs\\\\reso\\\\public\\\\可拖拽组件.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-17 22:40:04","categories":["开发"],"tags":["draggable","项目开发"],"summary":"","content":"\\n# 可拖拽组件\\n\\n由于新项目需要实现Processon一样的可视化建模，因此html相关的拖拽事件和属性都被我好好的研究了一下。\\n\\n## 1. API\\n\\n待补充\\n\\n## 2. Vue中使用\\n\\n注意使用@drag.native而非@drag\\n\\n## 3. 浏览器位置事件\\n\\n### 1. clientX/Y\\n\\n触发点相对于浏览器可视位置。\\n\\n### 2. pageX/Y\\n\\n触发点相对于\\n\\n### 3. offsetX/Y = firefox-layerX/Y\\n\\n点击处相对于被触发DOM的左上角\\n\\n### 4. screenX/Y = x/y\\n\\n相对于屏幕左上角\\n\\n![preview](https://segmentfault.com/img/bVXWPA?w=1043&h=552/view)\\n\\n> 这里有个问题，在MDNhttps://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/clientX中，所有位置的返回数值都是整数，也就是以1px为基本单位，但实际上在拖拽这样的组件位置是需要精准的，起码也要精确到两位小数，否则会产生明显位置差异。在MDN中说明CSSOM已经在将这个值由long int转为double，目前起码是在Chrome中可用，但是我的Chrome中没有显示double类型。\\n>\\n> 又去StackOverflow中搜索一下，问题很少，只有一条说可能和操作系统和电脑屏幕配置相关，打算去公司再试[2021-03-20 20:33:00]\\n\\n### 4. 节流\\n\\n由于draging事件会持续触发，实际上我们不需要那么高的触发频率，因此采用节流。\\n\\n```\\n// throttle.js\\nexport default {\\n  throttle(fn, delay) {\\n    let last = 0;\\n    \\n    return function() {\\n      let context = this;\\n      let args = arguments;\\n      let now = +new Date();\\n\\n      if(now - last > delay) {\\n        fn.apply(context, args);\\n        last = now;\\n      }\\n\\n    }\\n  }\\n}\\n```\\n\\n```\\n// 目前使用的方法是script生成函数\\nlet dragExec = methods.throttle((e) => {\\n    console.log(e);\\n  },1000);\\n\\n<template>\\n\\t<my-node @drag-ing=\'draging\'></my-node>\\n</template>\\n\\nmethod: {\\n\\tdraging(e){\\n\\t\\tdragExec(e);\\n\\t}\\n}\\n```\\n\\n### 5. 定义放置区\\n\\nMDN的方法很好。\\n\\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API\\n\\n![image-20210319162318997](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210319162318997.png)\\n\\n```\\n// vue中这样写\\n<div @dragover=\\"map_dragover_handler($event)\\">\\n\\nmethods:{\\n    map_dragover_handler(e) {\\n      e.preventDefault();\\n      e.dataTransfer.dropEffect = \\"move\\";\\n    },\\n}\\n```\\n\\n### 6. dataTransfer的神奇操作\\n\\n简单来说，dataTransfer在event对象中，触发事件可以传递值。\\n\\n但有个有趣的读写问题\\n\\n**Read/write mode**\\n读/写模式，在dragstart事件中使用，可以添加新数据到drag data store中。\\n\\n**Read-only mode**\\n只读模式，在drop事件中使用，可以读取被拖拽数据，不可添加新数据。\\n\\n**Protected mode**\\n保护模式，在所有其他的事件中使用，数据的列表可以被枚举，但是数据本身不可用且不能添加新数据。\\n\\n等于说，只有在dragstart定义变量，在drop接收这一种操作在html拖拽这部分。如果需要，那就定义全局变量吧，或者传递比如bus和vuex这样的。"}},{"label":"学习TypeScript","isFolder":false,"children":[],"info":{"id":13,"comment":0,"watch":0,"virPath":"学习TypeScript.md","title":"学习TypeScript","path":"F:\\\\Blogs\\\\reso\\\\public\\\\学习TypeScript.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-21 19:31:02","categories":["前端"],"tags":["Typescript","前端","记录"],"summary":"","content":"\\n# 学习TypeScript\\n\\n学习知识容易忘，这里做个记录也算个总结。\\n\\n## 1. 使用ts\\n\\n使用ts很简单，安装node，`npm i -g typescript`就好了。\\n\\n使用`tsc ${ts文件名} `编译生成js\\n\\n## 2. 数据类型\\n\\nts重要的作用之一就是限制变量的类型，目前变量类型有下：\\n\\n| 类型           | 说明                                                     | 举例                                         |\\n| -------------- | -------------------------------------------------------- | -------------------------------------------- |\\n| number         | 数字                                                     | let a: number                                |\\n| string         | 字符串                                                   | let str: string                              |\\n| boolean        | 布尔值                                                   | let bool: boolean                            |\\n| 字面量         | 该变量仅能赋予规定字面量的值                             | let a: \\"Hello\\"或let a :\\"Hello\\" \\\\| World\\"     |\\n| any            | 自己可以赋值任意类型，应该是用不到，用了和原生js一样。   | let a: any                                   |\\n| unknown        | 自己也可以赋值任意类型，但是不能赋值给其他类型变量       | let a:unknown                                |\\n| void           | 空，常用函数返回值                                       | function fn():void {}                        |\\n| never          | 没有返回结果，比如有些函数执行到中途不会继续             | function fn():never {throw new Error(\'hah\')} |\\n| object         | 万物对象，并不是心里想的那个对象，函数也算对象，一般不用 |                                              |\\n| object[接上面] | 规定变量属性类型                                         | let a : {name:string}                        |\\n| array          | 数组                                                     | let arr: string[]                            |\\n| tuple          | 元组，也就是固定长度的数组                               | let t: [number, string]                      |\\n| enum           | 枚举                                                     |                                              |\\n\\n> any类型变量可以赋予任何其他类型的变量\\n\\n**类型断言**（unknown专属）：\\n\\n由于unknown变量可以转换为各种类型变量，而当一个unknown变量想赋值给其他变量时，常规会报错，因为unknown不能转化为其他类型。\\n\\n但是使用类型断言可以告诉编译器，这个unknown变量在这里是什么类型。\\n\\n使用方式两种：\\n\\n1) 变量 as 类型\\n\\n```\\nlet a: unknown;\\nlet str: string;\\na = str as string;\\n```\\n\\n2) <类型>变量\\n\\n```\\nlet a: unknown;\\nlet str: string;\\na = <string>str;\\n```\\n\\n**定义对象属性**、\\n\\n```\\nlet a : {name:string, age?:number} // 问号意为可选\\n// 但如果可能有很多属性，那么使用以下方式定义\\nlet a: {[propsName:string]:any} //代表任意字符串类的属性名的值可以为any类型\\n```\\n\\n**定义函数**\\n\\n```\\nlet fn: (a: number, b: number) => number;\\n// 意思为fn必须是个函数，且这个函数两个形参都是number，返回值是number\\n```\\n\\n**定义数组**\\n\\n```\\n// 第一种\\nlet arr: string[] // 意思是arr必须是个数组，\\t且数组内的元素都必须是string类型\\n// 第二种\\nlet arr: Array<string>\\n```\\n\\n**定义枚举类**\\n\\n```\\nenum Type {\\n\\tRect = 0,\\n\\tCircle = 1\\n}\\nlet a: {name:string, type:Type};\\na = {\\n\\tname: \'矩形\',\\n\\ttype: Type.Rect\\n}\\n```\\n\\n**运算符**\\n\\n| --- 或\\n\\n& --- 且\\n\\n```\\nlet a: string | number // a可以是字符串，也可以是数字\\nlet a: {name:string} & {type:string} // a既要满足有name属性为字符串，又要满足type类型为字符串。\\n```\\n\\n**自定义类型**\\n\\n```\\ntype myType = string // 有点c++ typedef的感觉\\nlet a: myType // 实际上就是a为myType类型，而myType实际上是string类型，所以a是string类型\\n// 适用于自定义比如\\ntype myType = {\\n\\tname:string,\\n\\tage:number,\\n\\tgender:string,\\n\\tclothes:string\\n}\\nlet a:myType\\n```\\n\\n## 3. TS编译JS\\n\\n**热更新**\\n\\n`tsc ${文件} -w`\\n\\n### **配置**\\n\\n- include\\n\\n  - 说明：编译的包含文件范围\\n\\n  - 默认值：`[\\"**/*\\"]`\\n\\n  - 示例：\\n\\n    ```\\n  { // 两个*代表任意目录，一个*代表任意文件\\n    \\t\\"include\\":[\\n    \\t\\t\\"./src/**/*\\" \\n    \\t]\\n    }\\n    ```\\n  \\n- exclude\\n\\n  - 说明：编译文件不包含文件\\n\\n  - 默认值：`[\\"node_modules\\", \\"bower_components\\", \\"jspm_packages\\"]`\\n\\n  - 示例：\\n\\n    ```\\n    { // 两个*代表任意目录，一个*代表任意文件\\n    \\t\\"exclude\\":[\\n    \\t\\t\\"./src/**/*\\" \\n    \\t]\\n    }\\n    ```\\n\\n- extends\\n\\n  - 说明：定义被继承的配置文件\\n\\n  - 示例：\\n\\n    ```\\n    \\"extends\\": \\"./configs/base\\"\\n    ```\\n\\n- files\\n\\n  - 说明：定义被编译文件的列表，**编译的文件少时用到**\\n\\n  - 示例：\\n\\n    ```\\n    \\"files\\": [\\n        \\"core.ts\\",\\n        \\"sys.ts\\"\\n    ]\\n    ```\\n\\n- compilerOptions\\n\\n  - 说明：包含了许多子选项完成编译\\n  - 文档：https://www.tslang.cn/docs/handbook/compiler-options.html\\n- compilerOptions选项\\n\\n  - target\\n    - 说明：设置ts编译目标版本\\n\\n    - 默认值：ES3\\n\\n    - 可选值：ES3、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext\\n\\n    - 示例：\\n\\n      ```\\n      \\"compilerOptions\\": {\\n          \\"target\\": \\"ES6\\"\\n      }\\n      ```\\n\\n  - module\\n\\n    - 说明：设置编译后使用的模块化系统版本\\n      \\n      - 可选值：CommonJS、UMD、AMD、System、ES2020、ESNext、None\\n      \\n      - 示例：\\n      \\n        ```\\n        \\"compilerOptions\\": {\\n        \\t\\"module\\": \\"CommonJS\\"\\n        }\\n        ```\\n      \\n    \\n  - lib\\n\\n    - 说明：运行代码包含的库（一般不建议修改）\\n    - 可选值：可以故意lib输入错误信息，编译查看\\n    - 示例：同上\\n\\n  - outDIr\\n\\n    - 说明：编译后文件输出目录，所有js代码目录结构和输入的源结构一致。\\n\\n    - 默认：所有编译js代码与ts同目录\\n\\n    - 示例：\\n\\n      ```\\n      \\"compilerOptions\\": {\\n          \\"outDir\\": \\"dist\\"\\n      }\\n      ```\\n\\n  - outFile\\n\\n    - 说明：所有文件代码输出到一个文件中（使用不多且对于模块等需要配置）\\n\\n    - 示例：\\n\\n      ```\\n      \\"compilerOptions\\": {\\n          \\"outFile\\": \\"./dist/main.js\\"\\n      }\\n      ```\\n\\n  - 其余可以看文档，文档地址在上面\\n\\n- \\n\\n"}},{"label":"开发博客的一些点","isFolder":false,"children":[],"info":{"id":14,"comment":0,"watch":0,"virPath":"开发博客的一些点.md","title":"开发博客的一些点","path":"F:\\\\Blogs\\\\reso\\\\public\\\\开发博客的一些点.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-08 18:56:00","categories":["前端","总结"],"tags":["前端","博客"],"summary":"开发博客的一些想法，记录下来","content":"\\r\\n# 开发博客的一些点\\r\\n\\r\\n## 1. 文章详情内容可以用keep-alive\\r\\n\\r\\n文章内容赋值了就不会变，所以可以用keep-alive减少开销\\r\\n\\r\\n在router meta可以设置\\r\\n\\r\\n```javascript\\r\\n {\\r\\n  path:\'/book\',\\r\\n  name:\'book\',\\r\\n  components:Book,\\r\\n  meta:{\\r\\n     keepAlive:true //不需要被缓存的组件\\r\\n } \\r\\n```\\r\\n\\r\\n## 2. moment对象比较\\r\\n\\r\\n转化为时间戳比较\\r\\n\\r\\n```javascript\\r\\ntmepListDatas.sort((a,b) => {\\r\\n    return moment(b.time).unix() - moment(a.time).unix();\\r\\n})\\r\\n```\\r\\n\\r\\n但是注意，由于请求数据(虽然是mock到本地返回)，异步操作，因此必须在Promise.then里比较，否则比较函数可能执行完了，数组才加载进数据。\\r\\n\\r\\n## 3. mock的post\\r\\n\\r\\nmock的post传参会在config.body里面，但这是个字符串，需要JSON.parse()转成对象\\r\\n\\r\\n## 4. 博客运行时间\\r\\n\\r\\nmoemnt的diff方法\\r\\n\\r\\n`this.$moment().diff(this.$moment(this.$config.BlogStartTime),\'days\');`\\r\\n\\r\\n## 5. 在mock中返回的数据\\r\\n\\r\\n所有mock都是依赖于common.js暴露的tmepListDatas，根据esmodule的知识可知，import只会第一次复制进内存，后面的import都是从内存里拿来的同一个，所以可能存在的风险是如果在哪个地方修改了，会导致全局都修改了。\\r\\n\\r\\n## 6. 【性能优化】v-if和v-show适当使用\\r\\n\\r\\n**编译条件**：\\r\\n\\r\\nv-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译（编译被缓存？编译被缓存后，然后再切换的时候进行局部卸载);\\r\\n\\r\\nv-show是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且DOM元素保留；\\r\\n\\r\\n**性能消耗**：\\r\\n\\r\\nv-if有更高的切换消耗；\\r\\n\\r\\nv-show有更高的初始渲染消耗；\\r\\n\\r\\n## 7. 【性能优化】\\r\\n\\r\\n最初1500ms左右\\r\\n\\r\\n![image-20210311141041931](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210311141041931.png)\\r\\n\\r\\n图片懒加载后1300ms左右\\r\\n\\r\\n![image-20210311141540776](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210311141540776.png)\\r\\n\\r\\n把需要的element组件单独提取出来，可以看到没什么优化1300ms左右\\r\\n\\r\\n![image-20210311143540868](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210311143540868.png)\\r\\n\\r\\n开发脚手架后，使用脚手架生成json，可以发现超级优化到650ms左右，优化一倍，爽飞！\\r\\n\\r\\n![image-20210314192834406](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314192834406.png)\\r\\n\\r\\n把图片都扔到七牛云图床上，再次优化优化到570ms左右\\r\\n\\r\\n![image-20210314212013278](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314212013278.png)\\r\\n\\r\\n"}},{"label":"开发博客的问题和解决方案","isFolder":false,"children":[],"info":{"id":15,"comment":0,"watch":0,"virPath":"开发博客的问题和解决方案.md","title":"开发博客的问题和解决方案","path":"F:\\\\Blogs\\\\reso\\\\public\\\\开发博客的问题和解决方案.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-03-08 14:49:00","categories":["前端","博客"],"tags":["前端","博客","问题"],"summary":"开发本博客遇到的一些耗时长的问题和解决的方案","content":"\\r\\n# 开发博客的问题和解决方案\\r\\n\\r\\n## 1. 怎么解决文件查找\\r\\n\\r\\n用require.context遍历整个文件夹\\r\\n\\r\\n```\\r\\nconst filesMD = require.context(\'/public/reso\', true, /\\\\.md$/);\\r\\nconst filesMDNames = filesMD.keys(); //fileMDNames就是路径\\r\\n```\\r\\n\\r\\n## 2. 怎么解决md文件读入\\r\\n\\r\\n用mock，和axios，发现axios不仅可以读网络资源，也可以读文件\\r\\n\\r\\n方便可扩展，如果后面接着写后端，直接不用改前端\\r\\n\\r\\npublic默认会打包所有进去，但是浏览器source并不会显示\\r\\n\\r\\n## 3. 怎么解决md文件的解析\\r\\n\\r\\n用vue-markdown组件\\r\\n\\r\\ngithub-markdown-css作为样式\\r\\n\\r\\nhighlight.js代码高亮\\r\\n\\r\\n## 4. mock\\r\\n\\r\\nmock本身是通过匹配路径来拦截返回相应的数据\\r\\n\\r\\n但当有前缀相同的匹配规则时会有问题，比如\\r\\n\\r\\n两个mock规则 `mock(\'/^article\')`和`mock(\'/^articleDetail\')`\\r\\n\\r\\n就会发现articleDetail请求数据错误，返回的都是article的数据\\r\\n\\r\\n## 5. 自制文件系统\\r\\n\\r\\n```javascript\\r\\n// tempListDatas是一群路径\\r\\nExtractFileSystem(tmepListDatas)\\r\\nconst fileSystem = createNode(\'reso\',true,[],{});\\r\\n\\r\\nfunction createNode(name, isFolder, children = [], info = {}){\\r\\n  let newNode = {};\\r\\n  newNode.name = name;\\r\\n  newNode.isFolder = isFolder;\\r\\n  newNode.children = children;\\r\\n  newNode.info = info;\\r\\n  return newNode;\\r\\n}\\r\\n\\r\\n// arr是当前还没有安进去的路径数组，node是对象点，info是要填的节点信息\\r\\nfunction buildFileSystemTree(arr, node, info){\\r\\n  if(arr.length === 1) {\\r\\n    let newnode = createNode(arr[0].replace(\'.md\', \'\'), false, [], info);\\r\\n    node.children.push(newnode);\\r\\n    return;\\r\\n  }\\r\\n  else {\\r\\n    let nextnode = null;\\r\\n    for(let it of node.children){\\r\\n      if(it.name === arr[0]){\\r\\n        nextnode = it;break;\\r\\n      }\\r\\n    }\\r\\n    if(nextnode){\\r\\n      arr.shift()\\r\\n      buildFileSystemTree([...arr], nextnode, info);\\r\\n    }\\r\\n    else {\\r\\n      nextnode = createNode(arr[0], true, [], {});\\r\\n      arr.shift();\\r\\n      node.children.push(nextnode);\\r\\n      buildFileSystemTree([...arr], nextnode, info);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n```\\r\\n## 6.怎么限制摘要的行数\\r\\n\\r\\n```\\r\\n  display: -webkit-box; // 怪异盒模型\\r\\n  text-overflow: ellipsis; // 溢出部分省略\\r\\n  -webkit-box-orient: vertical; // \\r\\n  -webkit-line-clamp: 6; // 截取6行\\r\\n  word-break: break-all; // 任意断行，break-word可以根据单词打断，但是不美观\\r\\n  overflow: hidden;\\r\\n```\\r\\n\\r\\n## 7. 怎么取摘要\\r\\n\\r\\n结合6，目前是直接把所有这个博客的内容扔进去，同时由于这是md格式文本，所以先replace一下，把`#` `*`等替换掉。\\r\\n\\r\\n## 8. gitPage无法更新\\r\\n\\r\\n在确定一篇博客的模板格式后，发现gitPage构建报错了。\\r\\n\\r\\n看了这篇文章后https://www.jianshu.com/p/938ec18e572a，觉得应该和我的问题差不多，可能是jekyll不支持---这种形式的md，所以会报错，暂行办法就是把-加转义\\\\，长久之计是自己买服务器就没有这个检查了。\\r\\n\\r\\n[21:52] 又思考了一下，觉得不对。可以不用服务器，用node写个脚本，把信息存进一个js里面，还可以在这个里面写一些方法，这样就在本地加载好了所有信息，不用上传md文件，自然不用gitpage的检查，还能优化性能，省下运行代码的时间。本质没有变，都是要预处理，只不过这样就是等同build再多耗费时间，但别人在浏览器访问直接访问到数据。\\r\\n\\r\\n[2021-03-14 23:25] 问题已经解决，开发了新的脚手架，把文件内容存进json中，即省了md文件打包的大小，也不用被检查转义符号。\\r\\n\\r\\n## 9. windows写bat方便git push\\r\\n\\r\\n```\\r\\n// deploy.bat\\r\\ncd iceblue666.github.io\\r\\ngit add .\\r\\ngit commit -m \'博客更新\'\\r\\ngit push origin master\\r\\n```\\r\\n\\r\\n要注意是ANSI而不是utf8，否则会中文乱码\\r\\n\\r\\n[2021-03-14 23:25] 已经安排进脚手架工具里\\r\\n\\r\\n## 10. 【已解决】slot中的text不响应\\r\\n\\r\\n```\\r\\n// index.vue\\r\\n<cmp>{{ sth }}</cmp>\\r\\n<input v-model=\\"sth\\">\\r\\n{{ sth }}\\r\\n```\\r\\n\\r\\n```\\r\\n // cmp.vue\\r\\n <div>\\r\\n    <div>\\r\\n      cmp组件\\r\\n      {{ this.$slots.default }}\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n**问题**：在index.vue中v-model随意改变，可以看到cmp.vue中this.$slots.default确实是一起改变的，但是并不能响应。\\r\\n\\r\\n**尝试解决方案**：\\r\\n\\r\\n1. this.$set() 【失败】\\r\\n2. watch $slots deep:true 【失败】\\r\\n3. this.$forceUpdate()\\r\\n4. this.$slots.default[0].text 【成功】\\r\\n\\r\\n**推测**：text应该是在Vue考虑中太小了，不值得响应，否则整个花销会很大，或者是在编写Vue的时候没有考虑，而后续改的代价高就改不了，毕竟一般不会有人这么用，而且不这么用也有其他方法解决，比如绑定props上。\\r\\n\\r\\n**结果**：自己犯蠢，明明打印出来了是个数组，不仔细看，菜这一个字都顶到脑门上了！\\r\\n\\r\\n## 11. 【未解决】SEO检索\\r\\n\\r\\ngithub不支持爬取，所以SEO一定检测不到\\r\\n\\r\\n## 12. 【半解决】图床\\r\\n\\r\\n首先注册七牛云，需要实名认证，并且自带一个域名，自动情况下会有一个测试域名，但是测试域名一个月后会回收，因此最好绑定自己的域名。\\r\\n\\r\\n用PicGo配置七牛云，上传图片\\r\\n\\r\\n待解决：域名备案\\r\\n\\r\\n【扩展】：在Typora中设置偏好设置，可以自动上传图床。\\r\\n\\r\\n![image-20210314212555454](http://qpyj44oyp.hn-bkt.clouddn.com/imgimage-20210314212555454.png)\\r\\n\\r\\n## 13. 【未解决】TOC\\r\\n## 14. 【未解决】搜索\\r\\n## 15. 【未解决】标签\\r\\n\\r\\n## 16.  科学上传\\r\\n\\r\\n有时候github上传返回443\\r\\n\\r\\n执行下面代码试试\\r\\n\\r\\n```\\r\\ngit config --global --unset http.proxy \\r\\ngit config --global --unset https.proxy \\r\\n```\\r\\n\\r\\n配置科学\\r\\n\\r\\n```\\r\\ngit config --global http.proxy \'http://127.0.0.1:1080\'\\r\\ngit config --global https.proxy \'https://127.0.0.1:1080\'\\r\\n```\\r\\n\\r\\n"}},{"label":"我为什么睡不着","isFolder":false,"children":[],"info":{"id":16,"comment":0,"watch":0,"virPath":"我为什么睡不着.md","title":"我为什么睡不着","path":"F:\\\\Blogs\\\\reso\\\\public\\\\我为什么睡不着.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2020-02-19 22:08:00","categories":["所思所想"],"tags":["思考"],"summary":"","content":"\\r\\n# 我为什么睡不着\\r\\n\\r\\n我害怕黑夜，是因为我知道已失去光阴。睡不着，是因为害怕明天的自己依然是昨天的自己，越是害怕，就越是无法改变自己，逃离。一个接近完美的人只会让自己越来越完美，一个很烂的人只能让自己越来越烂。不是无法改变，只是觉得已经来不及了。\\r\\n\\r\\n"}},{"label":"数据范围反推时间复杂度","isFolder":false,"children":[],"info":{"id":17,"comment":0,"watch":0,"virPath":"数据范围反推时间复杂度.md","title":"数据范围反推时间复杂度","path":"F:\\\\Blogs\\\\reso\\\\public\\\\数据范围反推时间复杂度.md","imgSrc":"https://cdn2.hubspot.net/hubfs/322787/Mychefcom/images/BLOG/Header-Blog/photo-culinaire-pexels.jpg","time":"2021-01-19 21:49:00","categories":["算法"],"tags":["算法","算法复杂度"],"summary":"大佬的总结，fork一下，很有用","content":"\\r\\n# 数据范围反推时间复杂度\\r\\n\\r\\n一般ACM或者笔试题的时间限制是1秒或2秒。\\r\\n在这种情况下，C++代码中的操作次数控制在 107∼108107∼108 为最佳。\\r\\n\\r\\n下面给出在不同数据范围下，代码的时间复杂度和算法该如何选择：\\r\\n\\r\\nn≤30n≤30, 指数级别, dfs+剪枝，状态压缩dp\\r\\nn≤100n≤100 => O(n3)O(n3)，floyd，dp，高斯消元\\r\\nn≤1000n≤1000 => O(n2)O(n2)，O(n2logn)O(n2logn)，dp，二分，朴素版Dijkstra、朴素版Prim、Bellman-Ford\\r\\nn≤10000n≤10000 => O(n∗n√)O(n∗n)，块状链表、分块、莫队\\r\\nn≤100000n≤100000 => O(nlogn)O(nlogn) => 各种sort，线段树、树状数组、set/map、heap、拓扑排序、dijkstra+heap、prim+heap、spfa、求凸包、求半平面交、二分、CDQ分治、整体二分\\r\\nn≤1000000n≤1000000 => O(n)O(n), 以及常数较小的 O(nlogn)O(nlogn) 算法 => 单调队列、 hash、双指针扫描、并查集，kmp、AC自动机，常数比较小的 O(nlogn)O(nlogn) 的做法：sort、树状数组、heap、dijkstra、spfa\\r\\nn≤10000000n≤10000000 => O(n)O(n)，双指针扫描、kmp、AC自动机、线性筛素数\\r\\nn≤109n≤109 => O(n√)O(n)，判断质数\\r\\nn≤1018n≤1018 => O(logn)O(logn)，最大公约数，快速幂\\r\\nn≤101000n≤101000 => O((logn)2)O((logn)2)，高精度加减乘除\\r\\nn≤10100000n≤10100000 => O(logk×loglogk)，k表示位数O(logk×loglogk)，k表示位数，高精度加减、FFT/NTT\\r\\n\\r\\n作者：yxc\\r\\n链接：https://www.acwing.com/blog/content/32/\\r\\n来源：AcWing\\r\\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"}}],"info":{}},"tagAll":["算法","ACWing","汇总","最小","蛇形矩阵","BFS","DFS","种子填充","axios","mock","前端","svg","vuex","vue","知识点汇总","学习","Vue","坑","webpack","Bug","windows","nginx","node","脚手架","draggable","项目开发","Typescript","记录","博客","问题","思考","算法复杂度"]}')},"86d5":function(n,e,t){n.exports=t.p+"img/bg.97e974ab.jpg"},"894d5":function(n,e,t){"use strict";t.r(e);var r=t("e37f");e["default"]={"post|/articleDetail":function(n){return{status:200,message:"success",data:Object(r["extractDataByArr"])([JSON.parse(n.body).id])}}}},"895c":function(n,e,t){"use strict";t.r(e);t("fb6a");var r=t("e37f");e["default"]={"get|/getRecentArticle":function(n){return{status:200,message:"success",data:r["tmepListDatas"].slice(0,3)}}}},"8bfa":function(n,e,t){},"8e8b":function(n,e,t){"use strict";t("33cb")},"962d":function(n,e,t){"use strict";t("6acb")},"9c0c":function(n,e,t){},a054:function(n,e,t){"use strict";t("767e")},a509:function(n,e,t){},a6c5:function(n,e,t){"use strict";t("8bfa")},abdf:function(n,e,t){"use strict";t("152f")},bee3:function(n,e,t){"use strict";t.r(e);var r=t("2909"),a=t("e37f");e["default"]={"get|/getAllTags":function(n){return{status:200,message:"success",data:Object(r["a"])(a["tagAll"])}}}},bf55:function(n,e,t){"use strict";t.r(e);t("bc3a"),t("c1df");var r=t("80e7");console.log(r),e["default"]={"get|/test":function(n){return{status:200,message:"success",data:r}}}},c134:function(n,e,t){"use strict";t("3271")},c4c5:function(n,e,t){"use strict";t("3fe6")},d622:function(n,e,t){"use strict";t("a509")},da2b:function(n,e,t){},e37f:function(n,e,t){"use strict";t.r(e),t.d(e,"extractDataByArr",(function(){return a}));t("4de4"),t("caad6"),t("2532"),t("bc3a"),t("c1df");var r=t("80e7");function a(n){return r["Article"].filter((function(e){return n.includes(e.id)}))}t.d(e,"tmepListDatas",(function(){return r["Article"]})),t.d(e,"tagAll",(function(){return r["tagAll"]})),t.d(e,"fileSystem",(function(){return r["FileSystem"]}))},e969:function(n,e,t){"use strict";t.r(e);var r=t("e37f");e["default"]={"get|/getFileSystem":function(n){return{status:200,message:"success",data:r["fileSystem"]}}}},f0a0:function(n,e,t){},fd4f:function(n,e,t){}});